&br;
&br;
&br;

CENTER:
&size(20){２００５年度未踏ソフトウェア創造事業};~
~
&size(18){（ユーザ主導型Webアプリケーション作成ツールの開発）};~
~
&size(18){成果報告書};~

&br;
&br;
&br;
&br;
&br;
&br;
CENTER:
開発代表者：西岡 悠平~
共同開発者：染田 貴志~
担 当 P M：千葉 滋~
プロジェクト管理組織：日本エンジェルス・インベストメント（株）

&br;
&br;
&br;
&br;
&br;
&br;

CENTER:
２００６年２月２８日

#newpage

CENTER:
目次

#contents

* 要約[#tg9c3ea0e9]
>○１５０～２００字程度で本プロジェクトの開発成果の要旨（『何ができたか？』、『何を開発したか？』を記述して下さい。

本プロジェクトでは以下の機能を有するアプリケーションプラットフォーム「Tuigwaa」を開発した。
-コンテンツ (文書) の作成・編集・閲覧
-データモデルの定義、データの入力・編集・閲覧
-イベント指定によるフロー制御
このツールにより、セミナー受付サイト、掲示板、ブログ等といった Web アプリケーションを、特別な開発環境や知識を必要とせずにブラウザ上から構築することが可能となった。
* 背景及び目的[#tg9c3ea0ea]
> ○本プロジェクトを実施する以前の状況・背景とプロジェクト実施の目的とを記述し、背景にある問題をどのように解決あるいは変化させたいかを明らかにして下さい。

// 背景
近年企業内外を問わず Web アプリケーションの広がりは留まる所を知らない。
Web アプリケーションはクライアントへの依存性が小さく、またその情報の
同時性や、共有性といった点においてはデスクトップアプリケーションに比して
優れているといえる。

ただ、実際には簡易的な Web アプリケーションであってもその開発には時間や
コスト等の問題があり、グループウェアなどによって汎用化されたサービス
以外のものについては実際には導入されていないことが多々あると考えられる。

そのような汎用化されにくい状況では、スプレッドシートをメールで送信し、
情報共有をするといったような代替手段を用いられているケースが多い。
しかし、情報共有といった観点からすると、そのような代替手段は情報を
一元管理出来ない事から非効率であり、また最新性の保障が難しいといった
ような問題を有している。

// 目的

上記の問題点は、たとえどのような簡易な Web アプリケーションでも、
通常その作成はユーザではなく開発者に委ねられており、そのような仕組みにおいては
時間とコストの問題を解決することは難しい。
そこで、ユーザ自身が実際に自分にとって必要なアプリケーションを簡単に
作成出来るようなプラットフォームがあればその問題を解決出来ると考える。
* プロジェクト概要　[#tg9c3ea0eb]
>○本プロジェクトで①どんなソフトウェアまたはシステムを開発するのか（目標とする機能・性能やその実現手段など）と、②開発結果としてどこまで実現できたのかなど、開発テーマの概要となる点を『簡潔に記述』して下さい。
○本項はプロジェクトの目標と結果の概要をわかり易くまとめていただくものであり、開発内容・結果の詳細については、下記の「４．開発内容」で記述して下さい。

//①どんなソフトウェアまたはシステムを開発するのか

特別な知識や開発環境を必要とせずに、ユーザが Web アプリケーションを
作成するために、以下の機能を要するプラットフォームを開発する。

- コンテンツ (文書) の作成・編集・閲覧
- データモデルの定義、データの入力・編集・閲覧
- イベント指定によるフロー制御

また上述の全ての機能について、 Web インターフェースからのアクセスを前提とする。

これを実現するために、プラットフォーム側で通常は開発者が行うコンパイルや
設定等といった作業を自動化し、またユーザが Web アプリケーションを
作成する過程において対話式にて必要なコンポーネントを作成するように
ナビゲートする。

//②開発結果としてどこまで実現できたのか

開発結果として、上記の基本機能を有するプラットフォームを作成することが出来て、
本開発期間内に特定非営利活動法人 Seasar ファウンデーションから、リリースを
三回行った。
また実例として、千葉PM配下のプロジェクトの成果報告会の申し込み受付サイトを
本ツールによって作成した。
* 開発内容　[#tg9c3ea0ec]
>○本プロジェクトの開発内容について、開発機能の項目毎に、あるいは設計・実装・テスト・評価等の項目に分割し、どのような開発(or  取り組み)をしたのかとその結果などを図・表やサンプル画面なども付加して『詳細に記述』して下さい。
○この「４．開発内容」で本プロジェクトの開発内容がわかり易く、かつ具体的に記述されていない場合は、成果報告書の修正をお願いする場合があります。

** 概要[#tg5b3328a5]

簡単な説明。いろんなことが出来るよ。
いろんなコンポーネントつかってるよ。

-アーキテクチャ図。
-サービス図。
** Tuigwaa Manager [#tg891cfb27]

Tuigwaa Manager は以下にあげるようなサイト管理やバックアップ、
リストアなどの Tuigwaa システム全体に関わる設定や、情報の閲覧を
する機能を有する。

Tuigwaa Manager を利用する為には以下の URL にアクセスをする。
 http://<ホスト名>/<配備したコンテキスト名>/tgw-manager/

*** サイトの作成・編集[#tg24aef5ba]

サイトの新規作成や、既存のサイトの設定を編集する機能で、
以下の項目を設定する。

- 基本設定
:タイトル|サイトの名前。サイトのヘッダ部に表示される。
:サイトID|サイトのID。この値が Tuigwaa を配備したパスからの URL の一部となる。-は利用できない。また、編集の際にこの値の変更は出来ない。
:サイトの説明|サイトの説明。サイトのヘッダ部に表示される。
:ページ作成|サイトのページ編集モードでデフォルトで表示される編集モードを wiki かリッチ編集から選択する。
:テーブル作成|サイトのテーブル作成で利用される編集モードを、実際のテーブルのカラム名を指定する標準モードか簡易モードから選択する。

サイトを作成すると、自動的にサイト ID のスキーマが
データベース上に生成される。
これにより各サイトで同一名のテーブルを持つ事を可能とする。

- セキュリティ設定
:セキュリティ|セキュリティ保護を行うか否かの設定。
:ロール|セキュリティ保護が有効な場合、そのサイトを利用可能なロールを設定する。
:オプション|セキュリティ保護されたサイトで、未承認のユーザを閲覧可能とするかを指定する。

- データベース設定
:データベース|基本データベースか、外部データベースかを選択する。
:名前|外部データベースを利用する場合、その名前を指定する。
:スキーマ名|外部データベースを利用する場合、そのスキーマ名を指定する。
*** サイトのバックアップ・リストア[#tg24aef5bb]

サイトの設定、コンテンツ、及びテーブルのデータをバックアップ、
及びリストアする。
バックアップは Tuigwaa の配備されたローカルディスク上にファイルの形で
保存され、日付管理される。
リストアの際には、そのバックアップの日付を選択しそのバックアップ時点での
サイト状態に復旧することが出来る。

バックアップ機能においては、添付ファイル領域、及びテーブルのカラムタイプが
''ファイル''のデータは対象としない。
また、バックアップデータは先述のように配備されたローカルディスク上に保存される
為、Tuigwaa 自体を再配備した場合にはバックアップデータ自体が破棄される。
*** サイトテンプレート機能[#tg24aef5bc]

サイトテンプレート機能は、サイト単位にその設定、コンテンツ、テーブル
データをアーカイブ化する機能で、ある環境で作成した Tuigwaa 
サイトを、別の環境に移行するといった移行作業を容易に行うことが出来る。

サイトのデータをアーカイブ化し、ダウンロード及びアップロードする機能。
ダウンロードの際にはバックアップ機能を用いて最新のデータを取得した後に、

 サイトID.tgwar

の形式でダウンロードを行う。

またアップロード機能では、ローカルシステムにある、tgwar ファイルを
サイト上にアップロードする事によってアーカイブ化されたサイトを展開する
事が出来る。

これを利用して、例えば「受付サイトテンプレート」といった形でこの
サイトテンプレートを配信し、ユーザはそのデータ定義やコンテンツを
カスタマイズすることで、ユーザ独自の「受付サイト」Webアプリケーションを
簡単に作成することが出来る。

*** 外部データベースの追加[#tg24aef5bd]

Tuigwaa の基本データベースとは別に外部で稼動しているデータベースを
「外部データベース」として設定することにより、基本データベース上で
作成したテーブルと同様に、外部の既存テーブルのデータを閲覧、編集、
コンテンツ上での表示といったことが可能となる。

以下の項目を設定する。
:説明|外部データベースの説明。この名前をサイト設定時に選択が可能となる。
:ユーザ名|データベースへのアクセスユーザ名
:パスワード|上記ユーザのパスワード
:URL|JDBC のアクセス URL。

現状サポートする外部データベースは PostgreSQL と HSQLDB である。
*** ユーザ、ロールの作成・編集[#tg24aef5be]

Tuigwaa 上で利用できるユーザやロールの追加・変更・削除が出来る。
設定するのは、ユーザ名 (ロール名)、パスワード、説明の三項目である。

尚、組込みの LDAP サーバを利用する場合には、tuigwaa ユーザが
デフォルトで設定され、このユーザが Tuigwaa Administrator として
作成されており、このユーザを削除することは出来ない。
*** 各種情報の閲覧[#tg24aef5bf]

Tuigwaa Manager のトップページでは、現在の Tuigwaa に対するセッション数、
サイト数、登録ユーザ数、及び各サイトのコンテンツ数、テーブル数、
セキュリティ保護の有無、データベースモードを閲覧できる。

また、システム状態では、動的に生成された各サイト用の Struts の設定を
閲覧することが出来る。
** ページ[#tgfd86d971]

***編集　[#tg9b14d213]

ページコンテンツの管理には以下の二つの編集モードが存在する。

: Wiki 編集|Wiki スタイルでコンテンツを作成する。Wiki の文法は独自の解析エンジンにて処理され、一つのコンテンツから HTML/PDF/Text の三種類の形式で出力する事が可能である。また、見出し単位での編集が可能である。
: リッチ編集 | WYSIWYG (What You See Is What You Get) にて、編集画面で作成したコンテンツがそのまま HTML 化される。見出し単位での編集は出来ない。

新規作成する場合には、そのページコンテンツを管理する編集モードを選択する
事が可能であり、一度保存されたコンテンツは、それ移行は新規作成の際に
選択した編集モードを変更することは不可能である。
また、新規作成時のデフォルトの編集モードは Tuigwaa Manager のサイト設定にて
変更することが可能である。

:入力補助機能について|
Tuigwaa の各種機能はプラグイン形式でコンテンツに含めることが出来る。
その書式がプラグイン個々によって異なるために、プラグイン入力補助を
編集画面に用意することにより、プラグインを容易に利用しやすくしている。

:コンフリクトについて|
同じページコンテンツを同一のタイミングで別の二人以上のユーザが編集した場合、
バージョン管理機構により、より後に編集したユーザの保存画面に変更されたコンテンツが
表示され、そのまま保存するか、さらに変更するかのチェックを促す。
そのまま保存した場合には、変更は上書きされる。
見出し編集をしている場合には、同一の見出し配下のコンテンツではない場合には
マージ処理がなされる。

*** 添付ファイル[#tg21809b0e]

ページに対してファイルを添付をすることができる。その添付ファイルをページ内から参照することが可能である。また添付されたファイルは WebDAV のレポジトリに追加されるため、
WebDAV クライアントからその領域にアクセスする事が可能となる。

- WebDAV クライアントからのアクセス

WebDAV クライアントからは以下の URL に対してアクセスを行う。

 http://<ホスト名>/<配備したコンテキスト名>/WEB-DAV/<サイト名>

このサイト名以下には添付したページのフォルダが作成されており、
そのフォルダに対してファイルをコピーすることにより、上記の
添付と同等の結果を得ることが出来る。

WebDAV クライアントを用いた場合には、サーバ上のファイルを直接
編集することが可能となり、該当ファイルをサーバからダウンロードし、
編集し、再度アップロードするといった作業を避ける事が出来る。
*** 履歴[#tgb28cb8c0]

ページの変更履歴を閲覧することが可能である。
最新のコンテンツとの差分を表示することによって、どのユーザがどのような変更を
加えたのかの確認をすることが出来る。

*** RSS[#tgc4030e0]

ページの更新情報を RSS にて配信する機能。
最新更新10件を配信している。形式は以下の三種類である。

-RSS 1.0
-RSS 2.0
-Atom 0.3

FireFox のライブブックマークのような機能を有するブラウザであれば
自動的に RSS を認識することも可能である。

*** ページ設定[#tg9b14d216]

ページに関して以下の設定を行う事が出来る。
: ファイルタイプ | 隠しファイルか、通常のファイルかを選択できる。隠しファイルの場合、folderlist プラグインや、list プラグインでは表示されない。デフォルトは通常のファイル。
: PDFスタイル |ページをPDF出力する際の設定で、ヘッダの有無、ページサイズ、縦平方向か、横方向かの選択を行う。デフォルトは「ヘッダ有り、A4、縦方向」。
:ロック| ページをロックするか否かの選択。
:メニューページ|このページを表示する際のレイアウト内のメニューページで表示するページ名を指定する。
:右サイドページ|三段組スタイルを選択時に右側に表示されるページを指定する。

- ロックについて

ロック機能を設定することによって、該当のページのコンテンツを
変更出来ない状態にすることが可能である。

ロックには以下のルールがある。
- ロックされたページは明示的にロック解除されるまでは編集が出来ない。
- 未承認のユーザはページをロック出来ない。
- ページのロックの解除は、そのロックをしたユーザかもしくは、管理者権限を有するユーザに許可される。
** データベース[#tgfd86d972]


*** アーキテクチャ[#tgc74713fe]

Tuigwaa 上でブラウザからデータベースを編集する機能は、最新の Web アプリケーション開発手法を応用して実現しています。最新の Web アプリケーション開発手法とは、POJO というクラスを作成して、それに対応する入力フォーム、入力チェック、テーブル作成などを自動的に作成する方法です。Tuigwaa では、これをさらに進めて、ユーザがブラウザ上でデータモデルを定義して、それに対応する POJO を動的に作成して、その後、それに対応する入力フォーム、入力チェック、テーブルの作成など全て自動的に行っています。

実際に DB へアクセスするところは Hibernate というライブラリを利用しているため、Hibernate が対応している様々な種類の DB を Tuigwaa で使用することが可能となっています。


*** テーブルの作成 [#tgfd86d973]

ブラウザからデータモデルを定義することによって、自動的に対応するテーブル、入力フォームが作成されます。定義するものは以下です。

- テーブルの表示名
- テーブルの名前
- テーブルの説明
- 通常のカラムの設定
- 特殊カラムの設定

特殊カラムは次の 5つがあります。特殊カラムは対応するフォームは表示されず自動的にデータが挿入されます。

- 自動的にデータが挿入される特別なカラムとして以下の 5つがあります。
-- ID (連番、ランダムなID　を選択できます。)
-- ID (連番、ランダムなID　を選択できます。)
-- レコード作成ユーザ (ユニークにすることが可能)
-- レコード更新ユーザ
-- レコード作成時間
-- レコード更新時間

作成したテーブルは、編集、削除も可能です。
*** カラムの種類[#tgba3157bb]

Tuigwaa では、作成したカラムに対応して、入力フォームの種類、テーブルのカラムの型、Java 上の型、入力チェックの方法などが決まります。

|　| 対応するフィールド | 対応する Java | 対応する Hibernate | オプション|h
|文字列|テキストフィールド or テキストエリア|java.lang.String|string|通常の文字列,Eメール,短い文章,文章,Wikiの選択|
|整数|テキストフィールド|java.util.Integer|integer|　|
|小数|テキストフィールド|java.util.Float|float|　|
|日付|コンボボックス x 3|java.util.Date|date|　|
|2択|ラジオボタン|java.lang.Boolean|boolean|true, false のラベル作成|
|リストから文字列選択|コンボボックス or ラジオボタン|java.lang.String|string|選択するリスト作成|
|リストから整数選択|コンボボックス|java.lang.Integer|integer|最小値、最大値、間隔|
|リストから文字列複数選択|チェックボックス|java.util.Set|one-to-many|リストを作成|
|ファイル|ファイル挿入|byte[]|binary|　|
|関連データ|コンボボックス|参照するテーブルのクラス|many-to-one &br; SQL 的には forein key | 関連するテーブルを選択 |
|関連データのリスト|表示されない|java.util.Set|one-to-many|そのテーブルに既に関連付けられテーブルの中から選択|
|自己関連データ|コンボボックス|自分自身のクラス|many-to-one|　 |
|時刻|表示されない|java.util.Date|timestamp|　　|
*** 関連データについて[#tg7528ec80]

Tuigwaa では関連データとして、テーブル同士を関連づけることができます。
データベースで扱える全ての関連は扱えませんが、
入力フォームと組み合わせることで以下の一般的なモデルを実現することが
できます。

- one-to-one
> 仮想的に実現することができます。実際にはテーブルは 1つですが、カスタムフォーム(後述)で、入力フォームを分けたら、one-to-one ように扱うことができます。


- many-to-one
> 実際に 2つのテーブルに外部キーで関連づけられます。入力フォームは関連データはコンボボックスとで参照先のデータを選択することができます。Tuigwaa 上ではテーブルのカラムは''関連データ''という名前で扱われます。

- one-to-many
> 後述のレコード指定ページと組み合わせることで one-to-many のモデルを扱うような入力画面わを作成することができます。 one 側を DELETE すると many も cascade で削除されます。Tuigwaa 上ではテーブルのカラムは''関連データのリスト''という名前で扱われます。

- many-to-many
> 3つのテーブルが many-to-one - one-to-many の組み合わせで関連付けられており、中間のテーブルが関連データ2つのみであれば、自動的に many-to-many と判断されます。入力フォームとしては、チェックボックスで複数のデータが選択可能となります。リストから文字列複数選択は Tuigwaa 内部的には many-to-many の概念を使っています。






*** データの挿入、編集、削除[#tgd201e0f7]

作成したテーブルにデータの挿入方法として以下の 2つがあります。

- 1 レコードに 1 つのフォームで編集
- 複数のレコードを 1 つのフォームで一括編集

''1レコード 1つのフォームで編集''

作成したテーブルに対応するフォームが自動で作られるため、そのフォームに
入力することでデータを挿入することが可能です。また、データ入力後送信する前に
自動的にブラウザで入力チェックが行われ、不正な値があれば送信は中断されます。

例えば、文字列でオプションとしてeメールを選んだカラムに対して、Eメール形式でない
データが入力されたときに不正とみなされます。


''複数のレコードを 1 つのフォームで一括編集''

データベースの内容をスプレッドシートのように編集することが可能です。
TAB キーや十字キー押した時の動作も、通常のブラウザの動作と異なり、
スプレッドシートの操作に近いものとなっています。また、通常テキストエリアを
表示する場所もテキストフィールドを表示して一括で編集しやすくしています。

特徴的な機能としては

- 変更したセルを含む行のみデータベースでアップデートします。
- 複数のユーザが同じテーブルを編集する場合、自分が編集したセルが自動的に相手に伝わり、相手のそのセルは赤くなります。 (Ajax 使用)。
- 入力チェックはサーバ側で行われます。
*** テーブル、データに対する操作[#tg94eaaa50]

作成したテーブル、入力したデータに対して様々な操作を行うことが可能です。


''フィルタ''

様々な条件を指定してデータを絞り込むことが可能です。
また、最大件数、カラム選択、表示順序などを指定することも可能です。
条件とは、フィルタ対象とするカラムの選択、検索方法の指定、値の指定で
その条件を組み合わせてフィルタを作成します。

検索方法とその検索方法が使えるカラムの種類は以下の通りです。

| 検索方法 | カラムの種類 |h
| 一致する | 全ての種類のカラム |
| 異なる | 全ての種類のカラム |
| 値以上である | 整数、小数、リストから整数選択|
| 値より大きい | 整数、小数、リストから整数選択|
| 値以下である | 整数、小数、リストから整数選択|
| 値より小さい | 整数、小数、リストから整数選択|
| 前方一致する | 文字列、2択、リストから文字列選択、リストから文字列複数選択|
| 後方一致する | 文字列、2択、リストから文字列選択、リストから文字列複数選択|
| 含む | 文字列、2択、リストから文字列選択、リストから文字列複数選択 |
| 期間である | 日付型 |
| 指定と一致する | 日付型 |
| アクセスしたユーザ名と一致する |文字列、2択、リストから文字列選択、リストから文字列複数選択 |

関連データの検索は、関連データの型に依存します。

※ SQL では where 句を実行しています。

''集計表''

集約関数を用いて、1 次元の表、2 次元の集計表を作成することが可能です。
作成した集計表は、またグラフプラグインと組み合わせることによって

※ SQL では、 group by を実行しています。


''集計値''

フィルタの指定と集約関数を使って値を作成します。

(例) AAA という条件を満たすレコードの行数など

''カスタムフォーム''

テーブルに対して全てのカラムを挿入、編集するフォームではなく、一部分を挿入、編集するフォームを作成することが可能である。

- 表示しないカラムに対しては、挿入するデータをあらかじめ決めておく可能です。
- 更新専用にすることも可能です。



''検索フォーム''

検索対象のカラムとその条件を定義すると、それに対応するフォームが作成されます。
入力した値に基づいて検索されます。詳細は後述。

''更新ルール''

テーブルのデータをどのように変更するか設定することが可能です。
詳細はロジックの章に記述。
*** テーブル新規レコードの RSS[#tgc4030e1]

テーブルに新規レコードが追加、編集があった場合に RSS で知らせることが可能です。どのような条件のレコードが追加されれば RSS で知らせるかは Tuigwaa の
WebDB のフィル多機能を使って作成可能です。
RSS 用の URL は、tablefeed プラグインを作成します。

+ RSS として取得したい情報のフィルタを作成してください。(例)最新更新を降順で20件
+ レコードに対応したページを作成してください
+ tablefeed(ページ名、テーブル名、フィルタ名) で URL が作成できます。
** ページとデータベースの連動[#tgc09d638d]

ページとデータベースを連動することで Tuigwaa (小鳥)が飛べます。

Tuigwaa 内で作成されるページには 2種類に分けることができます。

- 通常のページ
- レコード指定のページ

通常のページでも、データベース機能で作成した様々なデータを
挿入することが可能ですが、より高度な機能を作成したければ
レコード指定のページが必要です。

*** 通常のページ[#tg5abe56a0]

通常のページにはデータベース機能で作成した様々なデータを
挿入することが可能です。

'' テーブルの挿入 ''

table プラグインで、テーブルを挿入可能です。プラグイン入力補助機能を使って
テーブルを選択するのみで可能です。フィルタまたは集計表を選択すると
指定された条件のデータを表示することが可能です。

'' 集計値の挿入 '' 

value プラグインで、挿入可能です。出力されるデータは数字であるため、文中などにも
挿入可能です。

'' グラフの挿入 ''

graph プラグインで、集計表に対してはグラフを作成することが可能です。以下の種類が選ぶことが可能です。

- 棒グラフ
- 折れ線グラフ
- 円グラフ (2次元の表には使うことができません)


''フォームの挿入''

form プラグインで、データを入力するためのフォームを挿入することが可能です。また edittable とカスタムフォームを組み合わせることで、特定のカラムの一括編集が可能です。
*** レコード指定ページ[#tg5abe56a1]

> data プラグインと form プラグインの説明

レコード指定ページとはあるテーブルの特定レコードと結びついたページのことを指します。
それによって、テーブル全体の内容だけではなく、特定レコードの情報をページ内に表示するなどが可能です。レコード指定ページを使うとできることとして以下の機能があります。

+ レコードの詳細ページを作成することが可能です。
+ レコードの編集ページを作成することが可能です。
+ 関連データ機能と組み合わせることで、通常とは異なったデータ入力が可能となります。(詳細は後述)
+ 更新ルール、ロジックと組み合わせることで、レコード指定ページにアクセスしたときに、特定レコードを定義されたルールで更新することが可能です。(詳細はロジックの章で記述)
+ レコードの詳細ページ並べて表示することが可能です。

''レコードの詳細ページについて''

レコード指定ページでは、data プラグインを使って、
そのレコードの項目を任意の位置に表示することが可能です。
例えば名簿の 山田小鳥 さんというレコード指定されたページを以下のように
編集すると変換されて出力します。

ページ編集
 &amp;data(名簿,苗字); さん
 あなたの名前は &amp; data(名簿,名前); さんですね。

表示
 山田 さん
 あなたの名前は小鳥さんですね。

となります。

''レコードの編集ページについて''

レコード指定ページで、そのテーブルに対応するフォームを挿入すると
自動的にフォームにそのレコードのデータがセットされ、編集することが
可能となります。カスタムフォームなどを使うと、そのレコードの一部分のみの編集などが
可能となります。


''レコード詳細ページを並べて表示することついて''

table プラグインでは複数のレコードを表として表示しますが、
datalist プラグインでは 1つ1つのレコードをレコード詳細ページの
形式で表示することが可能です。掲示板などで使うことが可能です。
*** レコード指定ページ作成のナビゲーション[#tg22aed215]

レコード指定ページは URL で表すと以下のようになります。

> Tuigwaa の URL/top.do?_pageName_=(ページ名)&amp;_ENTITY.(テーブル名)_=(ID)

このような URL を手動では書かず、以下の方法で URL の生成または飛ぶことが可能です。

:table プラグインのアクションからのリンク|table プラグインの引数でアクションを設定すると、それぞれの行の一番右のカラムにレコード指定ページへのリンクが表示されています。
:form プラグインからのデータ入力直後|form でデータを入力した直後は入力したレコードの指定ページとなっています
:レコード指定ページで、 datalink プラグインで作られたリンク|レコード指定ページの中で同じレコードを指定したページへのリンクが可能です。これにより、レコード一覧ページ  からレコード詳細ページへ、さらにそのレコードの編集などの流れを作ることが可能です。
:レコード指定ページで、fklink プラグインで作られたリンク|レコード指定ページの中で、関連データのレコード指定ページが可能となります。

レコード指定ページを先に作ってから上記機能で生成されるリンクから飛ぶ方法もありますが、以下のような対話型式に従って簡単に作ることが可能です。

+ レコード指定ページのリンクから飛ぶ
+ レコード指定ページが存在しなければ作成しますかと問われる
+ 作成するを選ぶとレコード指定ページの作成画面が現れ、その画面にはレコードデータを入力する補助機能がついている

レコード指定ページに、レコードが指定されていない状態で飛ぶと  &amp;data (...); と
表示されて、意味が通じないページとなってしまいます。このような状況を避けるために
レコード指定ページを隠しページにすることが推奨されます。
*** レコード指定ページと関連データ機能 [#tg5abe56a2]

レコード指定ページと関連データ機能を組み合わせることでさらに複雑なことが
可能となります。

説明のために具体的な例をあげます。

- テーブル.A には、テーブル.B への関連データのリストというカラム
- テーブル.B には、テーブル.A への関連データというカラム

が存在するととします。つまり、テーブル.B がテーブル.A を参照しています。

ここで、テーブル A のレコード指定のページがあるとします。そのページ上でテーブル B に対するform プラグインと datalist プラグインは特別な意味を持ちます。

''form プラグイン''

通常テーブル.A への関連データというカラムの入力としてコンボボックスが表示されるが、
ここでは指定されたテーブル.A のレコードが自動的に設定されます。

''datalist プラグイン''

通常フィルタを指定しなければテーブル.B の全てのレコードが表示されるが、
ここでは指定されたテーブル.A のレコードに関連したレコードのみが表示されます。

これらの機能を使うことによって、one-to-many のデータを入力、表示が簡単に行うことができます。
** ロジック[#tgc09d638e]

Tuigwaa では、イベント駆動で、条件を満たせば、特定のアクションを実行することが可能です。

*** アーキテクチャ[#tgaad5033a]

Tuigwaa の本来の動きと違うことをするために Seasar AOP の技術を使用しています。
ページ閲覧時、レコード挿入時に Method Interceptor を使って
通常の動きとは違いユーザが関心のある動作を行えるようになっています。

今後、Method Interceptor を挿入するポイントは増える予定です。


*** ロジックの詳細[#tgaad5033b]

アクションを実行するためのイベントとして以下があります。

- ページにアクセスしたとき
- テーブルにデータが追加される前
- テーブルにデータが追加された後
- カスタムフォームからデータが追加される前
- カスタムフォームからデータが追加された後

条件としては以下があります。

- 何時でも
- 集計値 

指定できるアクションとしては以下があります。

- 別のページに移動する
- 次の表の指定された行を削除する
- 指定された行に対して次の更新ルールを実行する
- 入力されたデータの Email 項目に対して、ページをメールで送信する 
** セキュリティ[#tg891cfb28]

Tuigwaa では、LDAP ベースで認証して、コンテンツやアクションに対して様々な権限を設定することができます。また、認証機能として、ユーザ毎に違ったデータを表示することが可能となっています。


*** 認証[#tg891cfb29]

Tuigwaa の認証は LDAP で一元管理されています。デフォルトでは同梱の Java 製 LDAP サーバ Apache DS が使われます。同梱の ApacheDS が使われる場合は、 Tuigwaa が Apache DS を同じ JVM 上で自動的に起動します。設定ファイルを変更することによって、既存の LDAP サーバーを指定することも可能です。

Tuigwaa 上で必要となるユーザとロールの作成や編集が Tuigwaa Manager から可能です。(既存の LDAP を使う場合は設定が必要)

*** 承認[#tg891cfb2a]

Tuigwaa では、ロールベースで以下のアクセス権限を設定できます。

+ サイトに対するアクセス権限
+ サイト内でのアクションに対するアクセス権限
+ フォルダに対するアクセス権限

サイトに対するアクセス権限は Tuigwaa Manager で設定して、残りのセキュリティはサイト内で設定します。Tuigwaa のロールベースでは、1人のユーザが複数のロールを持っていた場合、どれか一つのロールが権限をクリアすればその動作を実行することが可能です。

- サイトに対するアクセス権限[#tgbaa98a98]

これは、Tuigwaa Manager のサイトの新規作成または編集で設定します。
セキュリティ設定の''制限つきのサイト''というラジオボタンにチェックすることで有効となります。そのサイト内にアクセスできるロールにチェックします。サイト内で様々なセキュリティ設定をするときにも使用します。

例えば、インターネットに公開するような場合では、''制限つきのサイト''で''未認証の人も一部ページを見ることが可能'' としておけばよいでしょう。このようにすることで、認証なしでサイト閲覧可能だが、データベースの編集はできなかったり、あるフォルダの中身を閲覧不可能とすることが可能です。

(注) Tuigwaa Manager でサイトの編集を行うと、サイト内で設定したセキュリティ情報は全て初期化されます。

- サイト内でのアクションに対するアクセス権限[#tgbaa98a99]

セキュリティつきサイトで設定した場合、サイト内のメニューバーに ''設定->セキュリティ'' が表示されているはずです。そこで、以下のアクションに対して、それぞれのロールが何を実行できるか設定できます。

- データベース情報閲覧       
- データベース変更       
- ページ閲覧       
- ページ変更       
- サイト管理 (ロジックの作成、編集も含む)      

アクションに対するセキュリティを設定することによって、アクセスしたロールによってメニューバーのメニューが変わってきます。

[unauthenticated] は未認証を表します。''未認証の人が閲覧できるセキュリティつきサイト'' の場合は、初期化時は未認証の人はページ閲覧のみとなっています。


- フォルダに対するアクセス権限[#tgbaa98a9a]

どのロールがどのフォルダにアクセスできるかを指定できます。
メニューバーの''設定->フォルダ管理'' でフォルダ一覧を表示したときに
セキュリティつきのサイトであれば、フォルダの右に'セキュリティ'というリンクが
あるはずです。そこをクリックすれば、ポップアップが表示されて、どのロールがそのフォルダにアクセスできるを設定できます。そこに表示されるロール一覧は、サイトのセキュリティ設定で指定したロールです。

例えば、インターネットに公開しているサイトを作成している場合は、「管理フォルダ」を作成して、ユーザに見られたくないページをそのフォルダ内に作ります。そして、そのフォルダは admin ロールしかアクセスできないようにしておくと、未認証の人がアクセスできるページと、セキュリティがかかったページを 1つのサイト内に作成することも可能です。


*** 添付ファイルのセキュリティについて[#tg94c0e7fa]

アップロードファイルのセキュリティは少し複雑です。セキュリティの概念としてファイルへのアクセス手段に対するアクセス権限と、ファイル自身のアクセス権限があります。ファイルへのアクセス手段としては、サイト内からのアクセスと、WebDAV からのアクセスという 2つがあります。それぞれのアクセス方法でアクセス可能であっても、ファイル自身のアクセス権限がなければ、アクセスできません。それぞれのアクセス権限は以下になります。

|WebDAV からのアクセス権限 (閲覧)| 未認証ユーザが閲覧可能なサイトでも認証が必要。認証していればどのロールでもアクセス可能。|
|WebDAV からのアクセス権限　(編集)| 閲覧の場合と同じ|
|サイト内からのアクセス権限　(閲覧)| サイト管理の閲覧権限をもつユーザがアクセス可能|
|サイト内からのアクセス権限　(編集)| サイト管理のアクション権限をもつユーザがアクセス可能。 |
|ファイル自身のアクセス権限| サイトで使われるロールのみアクセス可能 |

*** その他の機能[#tgfd86d974]



''ページの作成者、閲覧者の記録''

誰がどのページを作成して、誰が編集したかなどが分かるようになっています。

''セキュリティリンク''

Tuigwaa 上ではアクセス権限のないドキュメントやアクションに対するリンクは表示しないという

''TuigwaaDB とセキュリティ連携''

例えば
認証とTuigwaaDBの連携などもできます。例えば

** サイト設定[#tgcdc4cc8a]
サイト設定では、サイト毎にその配下のフォルダ管理や
デザインの設定を行う事が出来る。

*** フォルダ管理[#tg406b562f]

- フォルダの作成機能
指定の名前でフォルダを作成出来る。
- フォルダ・ファイル操作
各フォルダ・ファイルの名前の変更や移動、削除を行う事が出来る。
また、フォルダの場合にはそのフォルダ以下のコンテンツを閲覧できる
ロールを指定することも可能である。

*** デザイン[#tg406b562e]

デザイン設定ではサイトのロゴファイルのアップロードやレイアウト指定などの
設定を行う事が出来る。

:サイトロゴ|サイトロゴをアップロードする。ロゴファイルはサイトのヘッダ部に表示される。
:サイトカラー|ベーシック (デフォルト)、オレンジ、グリーンからサイトのベースカラーを選択できる。
:ページスタイル|ページのレイアウトを選択できる。選択できるのは、二段組 [左:メニュー/右:コンテンツタイプ] 、二段組 [左:コンテンツ/右:メニュータイプ] 、三段組の三種類。
:メニューページ|このページを表示する際のレイアウト内のメニューページで表示するページ名を指定する。
:右サイドページ|三段組スタイルを選択時に右側に表示されるページを指定する。

** プラグイン [#tg891cfb2b]

前述したように、コンテンツからデータベースの内容を表示したり、
様々な処理を行うのに、プラグインが用いられる。
プラグインは、表示処理以外に、直接 URL による指定でその処理を
行うものもある。
以下にプラグインの一覧を示す。

|プラグイン名|カテゴリ|機能概略|h
|table|基本データベース|テーブルや集計表の内容を表形式で出力する。フィルタの指定も可能。|
|edittable|拡張データベース|テーブル内容の一括編集を行う。カスタムフォームと合わせて利用することを推奨。|
|sresult|基本データベース|検索フォームの結果を表示する。|
|form|基本データベース|テーブルの全カラムのデータを入力するフォームを表示する。|
|cform|基本データベース|カスタムフォームを表示する。|
|sform|基本データベース|検索フォームを表示する。|
|data|基本データベース|テーブルのレコードの各カラムのデータを指定して表示する。|
|datalink|拡張データベース||
|fklink|拡張データベース||
|value|集計関連|集計値を表示する|
|datalist|拡張データベース|レコード詳細ページを並べて表示する。|
|graph|集計関連|集計表からグラフを生成する。|
|excellink|集計関連|テーブルのデータからエクセルデータを生成する。|
|include|特殊|指定されたページのコンテンツを表示する。|
|calendar_viewer|Blog|指定されたカレンダーの内容を一覧表示する。|
|trackback|Blog|トラックバックURLの表示と、トラックバックピング受付時の処理を行う。|
|comment|Blog|コメント入力フォームの表示と、コメント入力処理を行う。|
|webalbum|添付ファイル|ページに添付されたデータから画像データを認識し、サムネイルの生成処理及び表示を行う|
|gmap|特殊|Google Map を表示する|
|email|特殊|email の送信フォームを表示と、メール送信処理を行う|
|tablefeed|拡張データベース|テーブルの更新情報の RSS を生成する。|
|counter|特殊|そのページに対するカウンターの表示と、カウント処理を行う。|
|ref|特殊|添付ファイルや、URL に対するリンクを表示する。|
|br|特殊|改行を表示する。|
|page|特殊|ページ名を表示する。|
|fpage|特殊|ページの絶対パスを表示する。|
|pageinfo|特殊|ページのバージョン情報、更新日時、更新ユーザ、作成日時、作成ユーザを表示する。|
|contents|特殊|目次を表示する。|
|recent|特殊|最新更新ページ名を表示する。|
|clear|特殊|スタイルシートの float をクリアする。|
|folderlist|特殊|指定されたフォルダ以下のファイルを表示する。|
|list|特殊|現在のページのフォルダ以下のファイルを表示する。|
|navi|特殊|DocBook 風のナビゲーションを表示する。|
|calendar|Blog|カレンダーを表示する。|
|rssreader|Blog|指定した RSS feed の内容を表示する。|
|newpage|特殊|印刷時にその位置で改ページを行う。|
|color|標準|子要素を指定した色にて表示する。|
|size|標準|子要素を指定したサイズにて表示する。|
|date|特殊|現在日付を表示する。|
|time|特殊|現在時間を表示する。|
|now|特殊|現在日時を表示する。|
|lastmod|特殊|最終更新日時を表示する。|
|calc|標準|四則演算の結果を表示する。|

//指定したテーブルの Email アドレスに対して、指定したページを送るための Eメールフォームを作成します。Eメール送信直前にページ内の &amp;data プラグインは固有のデータに置き換わります。

//-''セキュリティ対策のため認証済ユーザしかこの機能は使えません''
* 開発成果の特徴[#tg9c3ea0f0]
>○開発成果のアピールポイント・特徴をわかり易く簡潔にまとめて下さい。
○既存の技術や製品と比較することが可能であれば、既存の技術・製品と開発成果とを対比させて記述して下さい。

本ツールの特徴としては、このツール上で以下の機能をワンストップで
実現しており、それを連携させる事が出来る点である。

- コンテンツ (文書) の作成・編集・閲覧
- データモデルの定義、データの入力・編集・閲覧
- イベント指定によるフロー制御

これらの中でコンテンツ管理を主眼とする CMS と比較すると、
「受付サイト機能」などといったコンテンツ管理外の機能に
ついてはモジュールといった形で提供している物がある。
本ツールでは上述の三つの機能を連携させる事により、その
モジュール機能自体を作成することが可能であり、その点において
拡張性は高いと考えられる。

またデータ管理を主眼とする WebDB と比較すると、
そのデータの表示方式は定型化されているものが多い。
本ツールでは、データの表示については、コンテンツの
中の任意の位置に表示することが可能であり、またその
データを入力する部分もコンテンツ自体に含めることが可能である。

開発フレームワークと比較すると、本ツールは機能面での拡張性に
ついては若干劣る部分もあるが、簡易なものを実現するために必要と
する知識や環境は圧倒的に少ない。
* 今後の課題、展望[#tg9c3ea0f1]
>○本開発後に残っている課題とその課題に対する今後の取り組み、および開発成果の普及や実用化に関する予定や計画について記述してください。

開発後の課題は、機能開発を中心に行ってきたため、長期運用時の
安定化、パフォーマンスといった点にある。
また、現在はオープンソースとして GPL にて本ツールを配布しているが、
ビジネスとして利用する際にも扱いやすいライセンス体制を検討する必要がある。

課題に対する取り組みとしては、本ツールの開発者両名が後述の
株式会社四次元データの技術研究員として招かれることとなっており、
そこで継続的に開発を行う。
同様にライセンス体制についても、ビジネスも考慮した形で扱いやすい仕組みを導入する。

今後の普及や実用化に関しては、XOOPS 等のオープンソース CMS の導入実績などを
多数持つ株式会社四次元データから、実案件に対して本ツールをご提案頂ける事
となっている。
同様に、株式会社四次元データが運営している TECHSCORE (http://www.techscore.com/)
という Web サイト (月間100万ページビュー程) にて紹介して頂ける事が決定しており、
オープンソースの強みを生かして、ユーザに直接触れてもらいやすいような
情報を提供していく。
また、本ツールをユーザが直接体験出来るようなデモサイトを立ち上げる。

まとめると、以下のような三つの方向性を連携させた形で普及への施策とする。
- ビジネス展開
-- 案件で導入することにより、ビジネス上で体験してもらう
- オープンソース展開
-- 技術情報や利用情報を紹介し、技術系のユーザに体験してもらう
- デモサイト
-- デモサイトにて、実際に本ツールを導入する立場にはいない側のユーザに体験してもらう
* 実施計画書内容との相違点[#tg9c3ea0f2]
>○本プロジェクト終了後の開発結果について、実施計画書に記載の開発内容と比較して、計画より進んだ部分、計画通りに進まなかった部分、あるいは変更箇所について記述して下さい。
○実施計画書と相違がない場合は、『実施計画書内容と相違なし』と記載して下さい。

実施計画書に記載した機能は全て実装した。さらに相違点としては、
中間報告会にて、ページ編集や、データ編集、作成のインターフェース
が難解であるという指摘に対して以下の機能を追加した。

- WYSIWYG にてページ編集を行える機能
- スプレッドシートスタイルでデータ入力を行える機能
- サイトテンプレート機能

スケジュールの相違点として、開発スケジュールはスケジュールは
やや前倒しで進行し、二度のリリース予定に対して、実際には
開発期間中に三度のリリースを行った。
リリース時期は以下の通りである。

- リリース1 (2005年11月5日) [予定では2005年10月末]
- リリース2 (2005年11月30日)[予定では2006年2月末]
- リリース3 (2006年1月24日)
* 開発分担（該当者のみ記述）[#tg9c3ea0f3]
>○共同開発者および外注先やアルバイト雇用がある場合は、本プロジェクトの開発において誰が何を担当あるいは何を実施したのか、その開発分担を記述して下さい。

全体の設計、実装、テストの全てのフェーズにおいて両名にて作業を実施した。
また各機能に関しては、実装については主に以下のような割り振りで開発を
リードした。但し、全機能について厳密な役割分担を行ったわけではない。

西岡悠平 [データベース、ページとデータベースの連動、ロジック、セキュリティ]~
染田貴志 [Tuigwaa Manager、ページ、サイト設定、プラグイン]
* 秘匿ノウハウの指定（該当者のみ記述）[#tg9c3ea0f4]
>この成果報告書（本報告書）に記載された内容の中に秘匿すべきノウハウに該当するものがある場合は、その該当範囲とその理由を記述して下さい。
該当範囲は、「４．２□□□□□」等のように、本成果報告書の該当部分の項番を含めて具体的に記述して下さい。（範囲不明確な場合は、指定対象外とします。）
　(例) ４．２　□□□□□　の項が秘匿ノウハウ
理由：上記部分の特許出願を予定しているため（○○年○月頃出願予定）
上記で指定された秘匿ノウハウの取扱いについては、ＩＰＡと開発者間で別途協議の上、秘匿期間を含めた取扱い詳細を決定させていただきます。
また、各ＰＭに各プロジェクトの開発内容や評価結果をまとめていただいて未踏ＨＰで公開しますので、各ＰＭには秘匿ノウハウの有無・内容を、別途、詳細にご連絡下さい。

特になし
* その他（特記しておくべき事項等：該当者のみ記述）[#tg9c3ea0f5]

特になし
* 付録（用語説明、関連Ｗｅｂサイト　等）[#tg9c3ea0f6]

>(1)用語説明
○第三者が成果報告書を読んで理解できるよう、成果報告書で使用している略語・新語などの用語の説明を記述して下さい。
(2)関連Ｗｅｂサイト
○開発成果を公開しているWebサイトや、開発成果に関わるWebサイトがありましたら、（本文中に記載の場合も）本項にそのＵＲＬを必ず記述して下さい。

- 用語説明
:Tuigwaa|本プロジェクトで作成したツールの名称、正式には「WebUDA Tuigwaa」。WebUDA はWeb User Driven Architecture の略称で、本ツールにて実現する「ユーザ主導でアプリケーションを作成する」という概念そのものを表す名称。
:Tuigwaa Manager|Tuigwaa 全体の管理を行う管理コンソールの名称。
:サイト|Tuigwaa で管理するアプリケーションの基本単位。
:ロジック|ある特定の条件下で、実行される一連の処理のこと。例えばあるテーブルのデータに入力があった場合 (条件) にメールを送信する (動作) といった一連の処理全体を指す。
:プラグイン|Tuigwaa でテーブルとページコンテンツを結びつけたり、様々な機能を提供する機能群。

- 関連 Web サイト
:http://tuigwaa.sandbox.seasar.org|Tuigwaa プロジェクトサイト。ソースのリポジトリやリリース情報などを提供。
:http://www.seasar.org|Tuigwaa がその配下にある日本発オープンソースプロジェクトのサイト。
:http://www.techscore.com|株式会社四次元データが運営している技術情報サイト。
