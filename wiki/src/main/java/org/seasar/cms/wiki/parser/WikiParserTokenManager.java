/* Generated By:JJTree&JavaCC: Do not edit this line. WikiParserTokenManager.java */
package org.seasar.cms.wiki.parser;
import java.util.List;
import java.util.ArrayList;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.seasar.cms.wiki.util.GenerateNodeHelper;

public class WikiParserTokenManager implements WikiParserConstants
{
        private Log tokenLog = LogFactory.getLog(getClass());

        private int nLexicalErrors_ = 0;

        public int getNLexicalErrors(){
                return nLexicalErrors_;
        }
  public  java.io.PrintStream debugStream = System.out;
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x1000L) != 0L || (active1 & 0x200L) != 0L)
            return 71;
         if ((active0 & 0x4003800000L) != 0L)
            return 201;
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 69;
            return 15;
         }
         if ((active0 & 0x40000L) != 0L)
            return 69;
         if ((active0 & 0x4000L) != 0L)
            return 65;
         if ((active0 & 0xa00000000L) != 0L)
         {
            jjmatchedKind = 69;
            return 202;
         }
         if ((active0 & 0x700000000200L) != 0L)
            return 3;
         return -1;
      case 1:
         if ((active0 & 0x4003000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 1;
            }
            return 202;
         }
         return -1;
      case 2:
         if ((active0 & 0x4002000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 2;
            }
            return 202;
         }
         return -1;
      case 3:
         if ((active0 & 0x4000000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 3;
            return 202;
         }
         return -1;
      case 4:
         if ((active0 & 0xc00000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 4;
            return 202;
         }
         return -1;
      case 5:
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 5;
            return 202;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1)
{
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1), pos + 1);
}
private final int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private final int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_2()
{
   switch(curChar)
   {
      case 10:
         jjmatchedKind = 9;
         return jjMoveStringLiteralDfa1_2(0x700000000000L, 0x0L);
      case 32:
         return jjStopAtPos(0, 29);
      case 37:
         return jjMoveStringLiteralDfa1_2(0x800000000000000L, 0x0L);
      case 40:
         jjmatchedKind = 12;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x200L);
      case 41:
         jjmatchedKind = 13;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x400L);
      case 42:
         jjmatchedKind = 30;
         return jjMoveStringLiteralDfa1_2(0x180000000L, 0x0L);
      case 43:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_2(0x18000000L, 0x0L);
      case 44:
         return jjStopAtPos(0, 49);
      case 45:
         jjmatchedKind = 23;
         return jjMoveStringLiteralDfa1_2(0x4003000000L, 0x0L);
      case 47:
         return jjStartNfaWithStates_2(0, 18, 69);
      case 58:
         return jjStopAtPos(0, 48);
      case 59:
         return jjStopAtPos(0, 11);
      case 60:
         return jjStopAtPos(0, 19);
      case 61:
         return jjMoveStringLiteralDfa1_2(0x80000000000L, 0x0L);
      case 62:
         jjmatchedKind = 20;
         return jjMoveStringLiteralDfa1_2(0x600000L, 0x0L);
      case 67:
         return jjMoveStringLiteralDfa1_2(0x400000000L, 0x0L);
      case 76:
         return jjMoveStringLiteralDfa1_2(0x200000000L, 0x0L);
      case 82:
         return jjMoveStringLiteralDfa1_2(0x800000000L, 0x0L);
      case 91:
         return jjStartNfaWithStates_2(0, 14, 65);
      case 93:
         return jjStopAtPos(0, 15);
      case 123:
         return jjStopAtPos(0, 16);
      case 124:
         return jjStopAtPos(0, 47);
      case 125:
         return jjStopAtPos(0, 17);
      case 126:
         return jjStopAtPos(0, 10);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_2(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 37:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStopAtPos(1, 59);
         break;
      case 40:
         if ((active1 & 0x200L) != 0L)
            return jjStopAtPos(1, 73);
         break;
      case 41:
         if ((active1 & 0x400L) != 0L)
            return jjStopAtPos(1, 74);
         break;
      case 42:
         if ((active0 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 31;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_2(active0, 0x100000000L, active1, 0L);
      case 43:
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 27;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_2(active0, 0x10000000L, active1, 0L);
      case 44:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStopAtPos(1, 46);
         break;
      case 45:
         if ((active0 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 24;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_2(active0, 0x4002000000L, active1, 0L);
      case 58:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(1, 45);
         break;
      case 61:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(1, 43);
         break;
      case 62:
         if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_2(active0, 0x400000L, active1, 0L);
      case 69:
         return jjMoveStringLiteralDfa2_2(active0, 0x600000000L, active1, 0L);
      case 73:
         return jjMoveStringLiteralDfa2_2(active0, 0x800000000L, active1, 0L);
      case 124:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(1, 44);
         break;
      default :
         break;
   }
   return jjStartNfa_2(0, active0, active1);
}
private final int jjMoveStringLiteralDfa2_2(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_2(0, old0, old1); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(2, 32);
         break;
      case 43:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(2, 28);
         break;
      case 45:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_2(active0, 0x4000000000L);
      case 62:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(2, 22);
         break;
      case 70:
         return jjMoveStringLiteralDfa3_2(active0, 0x200000000L);
      case 71:
         return jjMoveStringLiteralDfa3_2(active0, 0x800000000L);
      case 78:
         return jjMoveStringLiteralDfa3_2(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_2(1, active0, 0L);
}
private final int jjMoveStringLiteralDfa3_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_2(3, 38, 201);
         break;
      case 72:
         return jjMoveStringLiteralDfa4_2(active0, 0x800000000L);
      case 84:
         return jjMoveStringLiteralDfa4_2(active0, 0x600000000L);
      default :
         break;
   }
   return jjStartNfa_2(2, active0, 0L);
}
private final int jjMoveStringLiteralDfa4_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(4, 33);
         break;
      case 69:
         return jjMoveStringLiteralDfa5_2(active0, 0x400000000L);
      case 84:
         return jjMoveStringLiteralDfa5_2(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_2(3, active0, 0L);
}
private final int jjMoveStringLiteralDfa5_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(5, 35);
         break;
      case 82:
         return jjMoveStringLiteralDfa6_2(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_2(4, active0, 0L);
}
private final int jjMoveStringLiteralDfa6_2(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(6, 34);
         break;
      default :
         break;
   }
   return jjStartNfa_2(5, active0, 0L);
}
private final void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private final void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private final void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}
private final void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}
private final void jjCheckNAddStates(int start)
{
   jjCheckNAdd(jjnextStates[start]);
   jjCheckNAdd(jjnextStates[start + 1]);
}
static final long[] jjbitVec0 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static final long[] jjbitVec3 = {
   0xfffffffffffffffeL, 0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffff007fffffL
};
static final long[] jjbitVec4 = {
   0xffffffffffffffffL, 0xffffffffffffffffL, 0xffffffffffffL, 0x0L
};
private final int jjMoveNfa_2(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 201;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 65:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 202:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 0:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 39)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 38)
                     jjCheckNAdd(75);
                  else if (curChar == 40)
                     jjstateSet[jjnewStateCnt++] = 71;
                  else if (curChar == 35)
                     jjCheckNAdd(5);
                  else if (curChar == 10)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 15:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 201:
               case 59:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 1:
                  if (curChar != 47)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(2);
                  break;
               case 2:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(2);
                  break;
               case 3:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 4:
                  if (curChar == 35)
                     jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAdd(5);
                  break;
               case 7:
                  if (curChar == 40)
                     jjAddStates(3, 4);
                  break;
               case 9:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if (curChar == 58 && kind > 40)
                     kind = 40;
                  break;
               case 11:
                  if (curChar == 35)
                     jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(12, 9);
                  break;
               case 18:
                  if (curChar == 40)
                     jjAddStates(5, 6);
                  break;
               case 20:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if (curChar == 58 && kind > 41)
                     kind = 41;
                  break;
               case 22:
                  if (curChar == 35)
                     jjCheckNAdd(23);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(23, 20);
                  break;
               case 31:
                  if (curChar == 40)
                     jjCheckNAdd(32);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 33:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 34:
                  if (curChar == 58 && kind > 42)
                     kind = 42;
                  break;
               case 43:
                  if (curChar == 47)
                     jjCheckNAdd(44);
                  break;
               case 44:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(7, 10);
                  break;
               case 45:
                  if (curChar == 46)
                     jjCheckNAdd(46);
                  break;
               case 46:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(11, 14);
                  break;
               case 47:
                  if (curChar == 58)
                     jjCheckNAdd(48);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar != 47)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 50:
                  if ((0xa3ff606800000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 51:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 52:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 61:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 62:
                  if (curChar == 46)
                     jjCheckNAdd(63);
                  break;
               case 63:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(62, 63);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(15, 16);
                  break;
               case 69:
                  if ((0x83ffc00000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 70:
                  if (curChar == 40)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if ((0xa7fffedbffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 72:
                  if ((0xa7ffffdbffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 73:
                  if (curChar == 41 && kind > 70)
                     kind = 70;
                  break;
               case 74:
                  if (curChar == 38)
                     jjCheckNAdd(75);
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAdd(75);
                  break;
               case 82:
                  if (curChar == 39)
                     jjCheckNAddStates(0, 2);
                  break;
               case 83:
                  if (curChar == 39 && kind > 60)
                     kind = 60;
                  break;
               case 84:
               case 85:
                  if (curChar == 39)
                     jjCheckNAdd(83);
                  break;
               case 86:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 90:
                  if (curChar == 40)
                     jjCheckNAdd(91);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 92:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if (curChar == 58 && kind > 36)
                     kind = 36;
                  break;
               case 98:
                  if (curChar == 40)
                     jjCheckNAdd(99);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(99, 100);
                  break;
               case 100:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if (curChar == 58 && kind > 37)
                     kind = 37;
                  break;
               case 108:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 109:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(111, 113);
                  break;
               case 115:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(20, 21);
                  break;
               case 116:
                  if (curChar == 58)
                     jjCheckNAddStates(22, 25);
                  break;
               case 118:
                  if (curChar == 47)
                     jjCheckNAdd(119);
                  break;
               case 119:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(26, 30);
                  break;
               case 120:
                  if (curChar == 46)
                     jjCheckNAdd(121);
                  break;
               case 121:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(31, 35);
                  break;
               case 122:
                  if (curChar == 58)
                     jjCheckNAdd(123);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(36, 38);
                  break;
               case 124:
                  if (curChar == 47)
                     jjCheckNAddStates(39, 41);
                  break;
               case 125:
                  if ((0xa3ff606800000000L & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 128:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 129:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 136:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(136, 137);
                  break;
               case 138:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 139:
                  if (curChar == 46)
                     jjCheckNAdd(140);
                  break;
               case 140:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 148:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(48, 49);
                  break;
               case 149:
                  if (curChar == 58)
                     jjCheckNAdd(150);
                  break;
               case 150:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(50, 52);
                  break;
               case 151:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(153, 155);
                  break;
               case 157:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(53, 54);
                  break;
               case 158:
                  if (curChar == 62)
                     jjCheckNAddStates(55, 58);
                  break;
               case 160:
                  if (curChar == 47)
                     jjCheckNAdd(161);
                  break;
               case 161:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(59, 63);
                  break;
               case 162:
                  if (curChar == 46)
                     jjCheckNAdd(163);
                  break;
               case 163:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(64, 68);
                  break;
               case 164:
                  if (curChar == 58)
                     jjCheckNAdd(165);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(69, 71);
                  break;
               case 166:
                  if (curChar == 47)
                     jjCheckNAddStates(72, 74);
                  break;
               case 167:
                  if ((0xa3ff606800000000L & l) != 0L)
                     jjCheckNAddStates(72, 74);
                  break;
               case 170:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 171:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 178:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 179);
                  break;
               case 180:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 181:
                  if (curChar == 46)
                     jjCheckNAdd(182);
                  break;
               case 182:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 190:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(81, 82);
                  break;
               case 191:
                  if (curChar == 62)
                     jjCheckNAddTwoStates(192, 198);
                  break;
               case 192:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(83, 85);
                  break;
               case 193:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(195, 197);
                  break;
               case 198:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(200, 197);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 65:
                  if (curChar == 91)
                     jjCheckNAdd(190);
                  if (curChar == 91)
                     jjCheckNAdd(157);
                  if (curChar == 91)
                     jjCheckNAdd(148);
                  if (curChar == 91)
                     jjCheckNAdd(115);
                  if (curChar == 91)
                     jjCheckNAdd(108);
                  break;
               case 202:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  else if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  break;
               case 0:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 91)
                     jjAddStates(86, 90);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  else if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 65;
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  else if (curChar == 104)
                     jjAddStates(91, 92);
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 53;
                  if (curChar == 70)
                     jjAddStates(93, 94);
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 28;
                  else if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  else if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 201:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  break;
               case 2:
                  if (kind > 2)
                     kind = 2;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 6:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(8, 9);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(12, 9);
                  break;
               case 13:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 14:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 16:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 23:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(23, 20);
                  break;
               case 24:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 25:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 35:
                  if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 36:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  break;
               case 39:
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  break;
               case 40:
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 41:
                  if ((0x7fffffe00000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 42:
                  if (curChar == 112)
                     jjCheckNAdd(52);
                  break;
               case 44:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(7, 10);
                  break;
               case 46:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(11, 14);
                  break;
               case 50:
                  if ((0x47fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 53:
               case 77:
                  if (curChar == 116)
                     jjCheckNAdd(42);
                  break;
               case 54:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 115)
                     jjCheckNAdd(52);
                  break;
               case 56:
                  if (curChar == 119)
                     jjCheckNAdd(55);
                  break;
               case 57:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 60:
                  if (curChar == 64)
                     jjCheckNAdd(61);
                  break;
               case 61:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 63:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(62, 63);
                  break;
               case 64:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 66:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(67);
                  break;
               case 67:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(67, 68);
                  break;
               case 68:
                  if (curChar == 93 && kind > 63)
                     kind = 63;
                  break;
               case 69:
                  if ((0x7fffffec7fffffeL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 71:
               case 72:
                  if ((0xc7ffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 75:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 76:
                  if (curChar == 104)
                     jjAddStates(91, 92);
                  break;
               case 78:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 112)
                     jjCheckNAdd(55);
                  break;
               case 80:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 88:
                  if (curChar == 70)
                     jjAddStates(93, 94);
                  break;
               case 89:
                  if (curChar == 84)
                     jjAddStates(95, 96);
                  break;
               case 94:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 95:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 84)
                     jjAddStates(97, 98);
                  break;
               case 102:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 103:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 91)
                     jjAddStates(86, 90);
                  break;
               case 107:
                  if (curChar == 91)
                     jjCheckNAdd(108);
                  break;
               case 108:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 110:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(111);
                  break;
               case 111:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(111, 113);
                  break;
               case 112:
                  if (curChar == 93 && kind > 64)
                     kind = 64;
                  break;
               case 113:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 91)
                     jjCheckNAdd(115);
                  break;
               case 115:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 117:
                  if (curChar == 112)
                     jjCheckNAdd(129);
                  break;
               case 119:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(26, 30);
                  break;
               case 121:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(31, 35);
                  break;
               case 125:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 126:
                  if (curChar == 93 && kind > 65)
                     kind = 65;
                  break;
               case 127:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 130:
               case 142:
                  if (curChar == 116)
                     jjCheckNAdd(117);
                  break;
               case 131:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 115)
                     jjCheckNAdd(129);
                  break;
               case 133:
                  if (curChar == 119)
                     jjCheckNAdd(132);
                  break;
               case 134:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(99, 100);
                  break;
               case 137:
                  if (curChar == 64)
                     jjCheckNAdd(138);
                  break;
               case 138:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 140:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 141:
                  if (curChar == 104)
                     jjAddStates(101, 102);
                  break;
               case 143:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 112)
                     jjCheckNAdd(132);
                  break;
               case 145:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 91)
                     jjCheckNAdd(148);
                  break;
               case 148:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(148, 149);
                  break;
               case 150:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(50, 52);
                  break;
               case 152:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(153);
                  break;
               case 153:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(153, 155);
                  break;
               case 154:
                  if (curChar == 93 && kind > 66)
                     kind = 66;
                  break;
               case 155:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 91)
                     jjCheckNAdd(157);
                  break;
               case 157:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(157, 158);
                  break;
               case 159:
                  if (curChar == 112)
                     jjCheckNAdd(171);
                  break;
               case 161:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(59, 63);
                  break;
               case 163:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(64, 68);
                  break;
               case 167:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(72, 74);
                  break;
               case 168:
                  if (curChar == 93 && kind > 67)
                     kind = 67;
                  break;
               case 169:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 172:
               case 184:
                  if (curChar == 116)
                     jjCheckNAdd(159);
                  break;
               case 173:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 115)
                     jjCheckNAdd(171);
                  break;
               case 175:
                  if (curChar == 119)
                     jjCheckNAdd(174);
                  break;
               case 176:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(103, 104);
                  break;
               case 179:
                  if (curChar == 64)
                     jjCheckNAdd(180);
                  break;
               case 180:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 182:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 183:
                  if (curChar == 104)
                     jjAddStates(105, 106);
                  break;
               case 185:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 112)
                     jjCheckNAdd(174);
                  break;
               case 187:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 91)
                     jjCheckNAdd(190);
                  break;
               case 190:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(190, 191);
                  break;
               case 192:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(83, 85);
                  break;
               case 194:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(195);
                  break;
               case 195:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(195, 197);
                  break;
               case 196:
                  if (curChar == 93 && kind > 68)
                     kind = 68;
                  break;
               case 197:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 199:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(200);
                  break;
               case 200:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(200, 197);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 202:
               case 69:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 0:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 15:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 71:
               case 72:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 108:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(17, 19);
                  break;
               case 115:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(20, 21);
                  break;
               case 148:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(48, 49);
                  break;
               case 150:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(50, 52);
                  break;
               case 157:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(53, 54);
                  break;
               case 190:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(81, 82);
                  break;
               case 192:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(83, 85);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 201 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x1000L) != 0L)
            return 71;
         if ((active0 & 0x4003800000L) != 0L)
            return 201;
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 69;
            return 15;
         }
         if ((active0 & 0x40000L) != 0L)
            return 69;
         if ((active0 & 0x4000L) != 0L)
            return 65;
         if ((active0 & 0xa00000000L) != 0L)
         {
            jjmatchedKind = 69;
            return 202;
         }
         if ((active0 & 0x700000000200L) != 0L)
            return 3;
         return -1;
      case 1:
         if ((active0 & 0x4003000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 1;
            }
            return 202;
         }
         return -1;
      case 2:
         if ((active0 & 0x4002000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 2;
            }
            return 202;
         }
         return -1;
      case 3:
         if ((active0 & 0x4000000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 3;
            return 202;
         }
         return -1;
      case 4:
         if ((active0 & 0xc00000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 4;
            return 202;
         }
         return -1;
      case 5:
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 5;
            return 202;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0)
{
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_1()
{
   switch(curChar)
   {
      case 10:
         jjmatchedKind = 9;
         return jjMoveStringLiteralDfa1_1(0x700000000000L);
      case 32:
         return jjStopAtPos(0, 29);
      case 37:
         return jjMoveStringLiteralDfa1_1(0x800000000000000L);
      case 40:
         return jjStartNfaWithStates_1(0, 12, 71);
      case 41:
         return jjStopAtPos(0, 13);
      case 42:
         jjmatchedKind = 30;
         return jjMoveStringLiteralDfa1_1(0x180000000L);
      case 43:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_1(0x18000000L);
      case 45:
         jjmatchedKind = 23;
         return jjMoveStringLiteralDfa1_1(0x4003000000L);
      case 47:
         return jjStartNfaWithStates_1(0, 18, 69);
      case 59:
         return jjStopAtPos(0, 11);
      case 60:
         return jjStopAtPos(0, 19);
      case 61:
         return jjMoveStringLiteralDfa1_1(0x80000000000L);
      case 62:
         jjmatchedKind = 20;
         return jjMoveStringLiteralDfa1_1(0x8000000600000L);
      case 67:
         return jjMoveStringLiteralDfa1_1(0x400000000L);
      case 76:
         return jjMoveStringLiteralDfa1_1(0x200000000L);
      case 82:
         return jjMoveStringLiteralDfa1_1(0x800000000L);
      case 91:
         return jjStartNfaWithStates_1(0, 14, 65);
      case 93:
         return jjStopAtPos(0, 15);
      case 123:
         return jjStopAtPos(0, 16);
      case 124:
         return jjStopAtPos(0, 50);
      case 125:
         return jjStopAtPos(0, 17);
      case 126:
         jjmatchedKind = 10;
         return jjMoveStringLiteralDfa1_1(0x10000000000000L);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_1(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 37:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStopAtPos(1, 59);
         break;
      case 42:
         if ((active0 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 31;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_1(active0, 0x100000000L);
      case 43:
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 27;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_1(active0, 0x10000000L);
      case 44:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStopAtPos(1, 46);
         break;
      case 45:
         if ((active0 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 24;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_1(active0, 0x4002000000L);
      case 58:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(1, 45);
         break;
      case 61:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(1, 43);
         break;
      case 62:
         if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_1(active0, 0x400000L);
      case 69:
         return jjMoveStringLiteralDfa2_1(active0, 0x600000000L);
      case 73:
         return jjMoveStringLiteralDfa2_1(active0, 0x800000000L);
      case 124:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(1, 44);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private final int jjMoveStringLiteralDfa2_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(2, 32);
         break;
      case 43:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(2, 28);
         break;
      case 45:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_1(active0, 0x4000000000L);
      case 62:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(2, 22);
         break;
      case 70:
         return jjMoveStringLiteralDfa3_1(active0, 0x200000000L);
      case 71:
         return jjMoveStringLiteralDfa3_1(active0, 0x800000000L);
      case 78:
         return jjMoveStringLiteralDfa3_1(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_1(1, active0);
}
private final int jjMoveStringLiteralDfa3_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(1, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_1(3, 38, 201);
         break;
      case 72:
         return jjMoveStringLiteralDfa4_1(active0, 0x800000000L);
      case 84:
         return jjMoveStringLiteralDfa4_1(active0, 0x600000000L);
      default :
         break;
   }
   return jjStartNfa_1(2, active0);
}
private final int jjMoveStringLiteralDfa4_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(2, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(4, 33);
         break;
      case 69:
         return jjMoveStringLiteralDfa5_1(active0, 0x400000000L);
      case 84:
         return jjMoveStringLiteralDfa5_1(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_1(3, active0);
}
private final int jjMoveStringLiteralDfa5_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(3, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(5, 35);
         break;
      case 82:
         return jjMoveStringLiteralDfa6_1(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_1(4, active0);
}
private final int jjMoveStringLiteralDfa6_1(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(4, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(6, 34);
         break;
      default :
         break;
   }
   return jjStartNfa_1(5, active0);
}
private final int jjMoveNfa_1(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 201;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 65:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 202:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 0:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 39)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 38)
                     jjCheckNAdd(75);
                  else if (curChar == 40)
                     jjstateSet[jjnewStateCnt++] = 71;
                  else if (curChar == 35)
                     jjCheckNAdd(5);
                  else if (curChar == 10)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 15:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 201:
               case 59:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 1:
                  if (curChar != 47)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(2);
                  break;
               case 2:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(2);
                  break;
               case 3:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 4:
                  if (curChar == 35)
                     jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAdd(5);
                  break;
               case 7:
                  if (curChar == 40)
                     jjAddStates(3, 4);
                  break;
               case 9:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if (curChar == 58 && kind > 40)
                     kind = 40;
                  break;
               case 11:
                  if (curChar == 35)
                     jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(12, 9);
                  break;
               case 18:
                  if (curChar == 40)
                     jjAddStates(5, 6);
                  break;
               case 20:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if (curChar == 58 && kind > 41)
                     kind = 41;
                  break;
               case 22:
                  if (curChar == 35)
                     jjCheckNAdd(23);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(23, 20);
                  break;
               case 31:
                  if (curChar == 40)
                     jjCheckNAdd(32);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 33:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 34:
                  if (curChar == 58 && kind > 42)
                     kind = 42;
                  break;
               case 43:
                  if (curChar == 47)
                     jjCheckNAdd(44);
                  break;
               case 44:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(7, 10);
                  break;
               case 45:
                  if (curChar == 46)
                     jjCheckNAdd(46);
                  break;
               case 46:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(11, 14);
                  break;
               case 47:
                  if (curChar == 58)
                     jjCheckNAdd(48);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar != 47)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 50:
                  if ((0xa3ff606800000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 51:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 52:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 61:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 62:
                  if (curChar == 46)
                     jjCheckNAdd(63);
                  break;
               case 63:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(62, 63);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(15, 16);
                  break;
               case 69:
                  if ((0x83ffc00000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 70:
                  if (curChar == 40)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if ((0xa7fffedbffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 72:
                  if ((0xa7ffffdbffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 73:
                  if (curChar == 41 && kind > 70)
                     kind = 70;
                  break;
               case 74:
                  if (curChar == 38)
                     jjCheckNAdd(75);
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAdd(75);
                  break;
               case 82:
                  if (curChar == 39)
                     jjCheckNAddStates(0, 2);
                  break;
               case 83:
                  if (curChar == 39 && kind > 60)
                     kind = 60;
                  break;
               case 84:
               case 85:
                  if (curChar == 39)
                     jjCheckNAdd(83);
                  break;
               case 86:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 90:
                  if (curChar == 40)
                     jjCheckNAdd(91);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 92:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if (curChar == 58 && kind > 36)
                     kind = 36;
                  break;
               case 98:
                  if (curChar == 40)
                     jjCheckNAdd(99);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(99, 100);
                  break;
               case 100:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if (curChar == 58 && kind > 37)
                     kind = 37;
                  break;
               case 108:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 109:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(111, 113);
                  break;
               case 115:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(20, 21);
                  break;
               case 116:
                  if (curChar == 58)
                     jjCheckNAddStates(22, 25);
                  break;
               case 118:
                  if (curChar == 47)
                     jjCheckNAdd(119);
                  break;
               case 119:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(26, 30);
                  break;
               case 120:
                  if (curChar == 46)
                     jjCheckNAdd(121);
                  break;
               case 121:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(31, 35);
                  break;
               case 122:
                  if (curChar == 58)
                     jjCheckNAdd(123);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(36, 38);
                  break;
               case 124:
                  if (curChar == 47)
                     jjCheckNAddStates(39, 41);
                  break;
               case 125:
                  if ((0xa3ff606800000000L & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 128:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 129:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 136:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(136, 137);
                  break;
               case 138:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 139:
                  if (curChar == 46)
                     jjCheckNAdd(140);
                  break;
               case 140:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 148:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(48, 49);
                  break;
               case 149:
                  if (curChar == 58)
                     jjCheckNAdd(150);
                  break;
               case 150:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(50, 52);
                  break;
               case 151:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(153, 155);
                  break;
               case 157:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(53, 54);
                  break;
               case 158:
                  if (curChar == 62)
                     jjCheckNAddStates(55, 58);
                  break;
               case 160:
                  if (curChar == 47)
                     jjCheckNAdd(161);
                  break;
               case 161:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(59, 63);
                  break;
               case 162:
                  if (curChar == 46)
                     jjCheckNAdd(163);
                  break;
               case 163:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(64, 68);
                  break;
               case 164:
                  if (curChar == 58)
                     jjCheckNAdd(165);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(69, 71);
                  break;
               case 166:
                  if (curChar == 47)
                     jjCheckNAddStates(72, 74);
                  break;
               case 167:
                  if ((0xa3ff606800000000L & l) != 0L)
                     jjCheckNAddStates(72, 74);
                  break;
               case 170:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 171:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 178:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 179);
                  break;
               case 180:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 181:
                  if (curChar == 46)
                     jjCheckNAdd(182);
                  break;
               case 182:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 190:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(81, 82);
                  break;
               case 191:
                  if (curChar == 62)
                     jjCheckNAddTwoStates(192, 198);
                  break;
               case 192:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(83, 85);
                  break;
               case 193:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(195, 197);
                  break;
               case 198:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(200, 197);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 65:
                  if (curChar == 91)
                     jjCheckNAdd(190);
                  if (curChar == 91)
                     jjCheckNAdd(157);
                  if (curChar == 91)
                     jjCheckNAdd(148);
                  if (curChar == 91)
                     jjCheckNAdd(115);
                  if (curChar == 91)
                     jjCheckNAdd(108);
                  break;
               case 202:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  else if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  break;
               case 0:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 91)
                     jjAddStates(86, 90);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  else if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 65;
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  else if (curChar == 104)
                     jjAddStates(91, 92);
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 53;
                  if (curChar == 70)
                     jjAddStates(93, 94);
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 28;
                  else if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  else if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 201:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  break;
               case 2:
                  if (kind > 2)
                     kind = 2;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 6:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(8, 9);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(12, 9);
                  break;
               case 13:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 14:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 16:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 23:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(23, 20);
                  break;
               case 24:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 25:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 35:
                  if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 36:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  break;
               case 39:
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  break;
               case 40:
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 41:
                  if ((0x7fffffe00000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 42:
                  if (curChar == 112)
                     jjCheckNAdd(52);
                  break;
               case 44:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(7, 10);
                  break;
               case 46:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(11, 14);
                  break;
               case 50:
                  if ((0x47fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 53:
               case 77:
                  if (curChar == 116)
                     jjCheckNAdd(42);
                  break;
               case 54:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 115)
                     jjCheckNAdd(52);
                  break;
               case 56:
                  if (curChar == 119)
                     jjCheckNAdd(55);
                  break;
               case 57:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 60:
                  if (curChar == 64)
                     jjCheckNAdd(61);
                  break;
               case 61:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 63:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(62, 63);
                  break;
               case 64:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 66:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(67);
                  break;
               case 67:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(67, 68);
                  break;
               case 68:
                  if (curChar == 93 && kind > 63)
                     kind = 63;
                  break;
               case 69:
                  if ((0x7fffffec7fffffeL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 71:
               case 72:
                  if ((0xc7ffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 75:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 76:
                  if (curChar == 104)
                     jjAddStates(91, 92);
                  break;
               case 78:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 112)
                     jjCheckNAdd(55);
                  break;
               case 80:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 88:
                  if (curChar == 70)
                     jjAddStates(93, 94);
                  break;
               case 89:
                  if (curChar == 84)
                     jjAddStates(95, 96);
                  break;
               case 94:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 95:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 84)
                     jjAddStates(97, 98);
                  break;
               case 102:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 103:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 91)
                     jjAddStates(86, 90);
                  break;
               case 107:
                  if (curChar == 91)
                     jjCheckNAdd(108);
                  break;
               case 108:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 110:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(111);
                  break;
               case 111:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(111, 113);
                  break;
               case 112:
                  if (curChar == 93 && kind > 64)
                     kind = 64;
                  break;
               case 113:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 91)
                     jjCheckNAdd(115);
                  break;
               case 115:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 117:
                  if (curChar == 112)
                     jjCheckNAdd(129);
                  break;
               case 119:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(26, 30);
                  break;
               case 121:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(31, 35);
                  break;
               case 125:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 126:
                  if (curChar == 93 && kind > 65)
                     kind = 65;
                  break;
               case 127:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 130:
               case 142:
                  if (curChar == 116)
                     jjCheckNAdd(117);
                  break;
               case 131:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 115)
                     jjCheckNAdd(129);
                  break;
               case 133:
                  if (curChar == 119)
                     jjCheckNAdd(132);
                  break;
               case 134:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(99, 100);
                  break;
               case 137:
                  if (curChar == 64)
                     jjCheckNAdd(138);
                  break;
               case 138:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 140:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 141:
                  if (curChar == 104)
                     jjAddStates(101, 102);
                  break;
               case 143:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 112)
                     jjCheckNAdd(132);
                  break;
               case 145:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 91)
                     jjCheckNAdd(148);
                  break;
               case 148:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(148, 149);
                  break;
               case 150:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(50, 52);
                  break;
               case 152:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(153);
                  break;
               case 153:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(153, 155);
                  break;
               case 154:
                  if (curChar == 93 && kind > 66)
                     kind = 66;
                  break;
               case 155:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 91)
                     jjCheckNAdd(157);
                  break;
               case 157:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(157, 158);
                  break;
               case 159:
                  if (curChar == 112)
                     jjCheckNAdd(171);
                  break;
               case 161:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(59, 63);
                  break;
               case 163:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(64, 68);
                  break;
               case 167:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(72, 74);
                  break;
               case 168:
                  if (curChar == 93 && kind > 67)
                     kind = 67;
                  break;
               case 169:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 172:
               case 184:
                  if (curChar == 116)
                     jjCheckNAdd(159);
                  break;
               case 173:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 115)
                     jjCheckNAdd(171);
                  break;
               case 175:
                  if (curChar == 119)
                     jjCheckNAdd(174);
                  break;
               case 176:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(103, 104);
                  break;
               case 179:
                  if (curChar == 64)
                     jjCheckNAdd(180);
                  break;
               case 180:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 182:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 183:
                  if (curChar == 104)
                     jjAddStates(105, 106);
                  break;
               case 185:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 112)
                     jjCheckNAdd(174);
                  break;
               case 187:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 91)
                     jjCheckNAdd(190);
                  break;
               case 190:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(190, 191);
                  break;
               case 192:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(83, 85);
                  break;
               case 194:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(195);
                  break;
               case 195:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(195, 197);
                  break;
               case 196:
                  if (curChar == 93 && kind > 68)
                     kind = 68;
                  break;
               case 197:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 199:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(200);
                  break;
               case 200:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(200, 197);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 202:
               case 69:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 0:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 15:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 71:
               case 72:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 108:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(17, 19);
                  break;
               case 115:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(20, 21);
                  break;
               case 148:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(48, 49);
                  break;
               case 150:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(50, 52);
                  break;
               case 157:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(53, 54);
                  break;
               case 190:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(81, 82);
                  break;
               case 192:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(83, 85);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 201 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x1000L) != 0L)
            return 71;
         if ((active0 & 0x4003800000L) != 0L)
            return 201;
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 69;
            return 15;
         }
         if ((active0 & 0x40000L) != 0L)
            return 69;
         if ((active0 & 0x4000L) != 0L)
            return 65;
         if ((active0 & 0xa00000000L) != 0L)
         {
            jjmatchedKind = 69;
            return 202;
         }
         if ((active0 & 0x700000000200L) != 0L)
            return 3;
         return -1;
      case 1:
         if ((active0 & 0x4003000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 1;
            }
            return 202;
         }
         return -1;
      case 2:
         if ((active0 & 0x4002000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 69;
               jjmatchedPos = 2;
            }
            return 202;
         }
         return -1;
      case 3:
         if ((active0 & 0x4000000000L) != 0L)
            return 201;
         if ((active0 & 0xe00000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 3;
            return 202;
         }
         return -1;
      case 4:
         if ((active0 & 0xc00000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 4;
            return 202;
         }
         return -1;
      case 5:
         if ((active0 & 0x400000000L) != 0L)
         {
            jjmatchedKind = 69;
            jjmatchedPos = 5;
            return 202;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private final int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private final int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 10:
         jjmatchedKind = 9;
         return jjMoveStringLiteralDfa1_0(0x700000000000L);
      case 32:
         return jjStopAtPos(0, 29);
      case 37:
         return jjMoveStringLiteralDfa1_0(0x800000000000000L);
      case 40:
         return jjStartNfaWithStates_0(0, 12, 71);
      case 41:
         return jjStopAtPos(0, 13);
      case 42:
         jjmatchedKind = 30;
         return jjMoveStringLiteralDfa1_0(0x180000000L);
      case 43:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_0(0x18000000L);
      case 44:
         return jjStopAtPos(0, 53);
      case 45:
         jjmatchedKind = 23;
         return jjMoveStringLiteralDfa1_0(0x4003000000L);
      case 47:
         return jjStartNfaWithStates_0(0, 18, 69);
      case 59:
         return jjStopAtPos(0, 11);
      case 60:
         return jjStopAtPos(0, 19);
      case 61:
         return jjMoveStringLiteralDfa1_0(0x80000000000L);
      case 62:
         jjmatchedKind = 20;
         return jjMoveStringLiteralDfa1_0(0x600000L);
      case 67:
         return jjMoveStringLiteralDfa1_0(0x400000000L);
      case 76:
         return jjMoveStringLiteralDfa1_0(0x200000000L);
      case 82:
         return jjMoveStringLiteralDfa1_0(0x800000000L);
      case 91:
         return jjStartNfaWithStates_0(0, 14, 65);
      case 93:
         return jjStopAtPos(0, 15);
      case 123:
         return jjStopAtPos(0, 16);
      case 125:
         return jjStopAtPos(0, 17);
      case 126:
         return jjStopAtPos(0, 10);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private final int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 37:
         if ((active0 & 0x800000000000000L) != 0L)
            return jjStopAtPos(1, 59);
         break;
      case 42:
         if ((active0 & 0x80000000L) != 0L)
         {
            jjmatchedKind = 31;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L);
      case 43:
         if ((active0 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 27;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x10000000L);
      case 44:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStopAtPos(1, 46);
         break;
      case 45:
         if ((active0 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 24;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x4002000000L);
      case 58:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(1, 45);
         break;
      case 61:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStopAtPos(1, 43);
         break;
      case 62:
         if ((active0 & 0x200000L) != 0L)
         {
            jjmatchedKind = 21;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x400000L);
      case 69:
         return jjMoveStringLiteralDfa2_0(active0, 0x600000000L);
      case 73:
         return jjMoveStringLiteralDfa2_0(active0, 0x800000000L);
      case 124:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStopAtPos(1, 44);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private final int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(2, 32);
         break;
      case 43:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(2, 28);
         break;
      case 45:
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 25;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x4000000000L);
      case 62:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(2, 22);
         break;
      case 70:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000L);
      case 71:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000L);
      case 78:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private final int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x4000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 38, 201);
         break;
      case 72:
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000L);
      case 84:
         return jjMoveStringLiteralDfa4_0(active0, 0x600000000L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private final int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(4, 33);
         break;
      case 69:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000L);
      case 84:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private final int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x800000000L) != 0L)
            return jjStopAtPos(5, 35);
         break;
      case 82:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
private final int jjMoveStringLiteralDfa6_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0); 
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0);
      return 6;
   }
   switch(curChar)
   {
      case 58:
         if ((active0 & 0x400000000L) != 0L)
            return jjStopAtPos(6, 34);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0);
}
private final int jjMoveNfa_0(int startState, int curPos)
{
   int[] nextStates;
   int startsAt = 0;
   jjnewStateCnt = 201;
   int i = 1;
   jjstateSet[0] = startState;
   int j, kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 65:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 202:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 0:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 39)
                     jjCheckNAddStates(0, 2);
                  else if (curChar == 38)
                     jjCheckNAdd(75);
                  else if (curChar == 40)
                     jjstateSet[jjnewStateCnt++] = 71;
                  else if (curChar == 35)
                     jjCheckNAdd(5);
                  else if (curChar == 10)
                     jjstateSet[jjnewStateCnt++] = 3;
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 15:
                  if ((0x83ffc00000000000L & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 201:
               case 59:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 1:
                  if (curChar != 47)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(2);
                  break;
               case 2:
                  if ((0xffffffffffffdbffL & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAdd(2);
                  break;
               case 3:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 4:
                  if (curChar == 35)
                     jjCheckNAdd(5);
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjCheckNAdd(5);
                  break;
               case 7:
                  if (curChar == 40)
                     jjAddStates(3, 4);
                  break;
               case 9:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 10;
                  break;
               case 10:
                  if (curChar == 58 && kind > 40)
                     kind = 40;
                  break;
               case 11:
                  if (curChar == 35)
                     jjCheckNAdd(12);
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(12, 9);
                  break;
               case 18:
                  if (curChar == 40)
                     jjAddStates(5, 6);
                  break;
               case 20:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 21:
                  if (curChar == 58 && kind > 41)
                     kind = 41;
                  break;
               case 22:
                  if (curChar == 35)
                     jjCheckNAdd(23);
                  break;
               case 23:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(23, 20);
                  break;
               case 31:
                  if (curChar == 40)
                     jjCheckNAdd(32);
                  break;
               case 32:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(32, 33);
                  break;
               case 33:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 34:
                  if (curChar == 58 && kind > 42)
                     kind = 42;
                  break;
               case 43:
                  if (curChar == 47)
                     jjCheckNAdd(44);
                  break;
               case 44:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(7, 10);
                  break;
               case 45:
                  if (curChar == 46)
                     jjCheckNAdd(46);
                  break;
               case 46:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(11, 14);
                  break;
               case 47:
                  if (curChar == 58)
                     jjCheckNAdd(48);
                  break;
               case 48:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(48, 49);
                  break;
               case 49:
                  if (curChar != 47)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 50:
                  if ((0xa3ff606800000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 51:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 52:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 61:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 62:
                  if (curChar == 46)
                     jjCheckNAdd(63);
                  break;
               case 63:
                  if ((0x3ff200000000000L & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(62, 63);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(15, 16);
                  break;
               case 69:
                  if ((0x83ffc00000000000L & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 70:
                  if (curChar == 40)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 71:
                  if ((0xa7fffedbffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 72:
                  if ((0xa7ffffdbffffdbffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 73:
                  if (curChar == 41 && kind > 70)
                     kind = 70;
                  break;
               case 74:
                  if (curChar == 38)
                     jjCheckNAdd(75);
                  break;
               case 75:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjCheckNAdd(75);
                  break;
               case 82:
                  if (curChar == 39)
                     jjCheckNAddStates(0, 2);
                  break;
               case 83:
                  if (curChar == 39 && kind > 60)
                     kind = 60;
                  break;
               case 84:
               case 85:
                  if (curChar == 39)
                     jjCheckNAdd(83);
                  break;
               case 86:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 39)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 90:
                  if (curChar == 40)
                     jjCheckNAdd(91);
                  break;
               case 91:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(91, 92);
                  break;
               case 92:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 93:
                  if (curChar == 58 && kind > 36)
                     kind = 36;
                  break;
               case 98:
                  if (curChar == 40)
                     jjCheckNAdd(99);
                  break;
               case 99:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(99, 100);
                  break;
               case 100:
                  if (curChar == 41)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 101:
                  if (curChar == 58 && kind > 37)
                     kind = 37;
                  break;
               case 108:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 109:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 111:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(111, 113);
                  break;
               case 115:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(20, 21);
                  break;
               case 116:
                  if (curChar == 58)
                     jjCheckNAddStates(22, 25);
                  break;
               case 118:
                  if (curChar == 47)
                     jjCheckNAdd(119);
                  break;
               case 119:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(26, 30);
                  break;
               case 120:
                  if (curChar == 46)
                     jjCheckNAdd(121);
                  break;
               case 121:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(31, 35);
                  break;
               case 122:
                  if (curChar == 58)
                     jjCheckNAdd(123);
                  break;
               case 123:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(36, 38);
                  break;
               case 124:
                  if (curChar == 47)
                     jjCheckNAddStates(39, 41);
                  break;
               case 125:
                  if ((0xa3ff606800000000L & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 128:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 129:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 136:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(136, 137);
                  break;
               case 138:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 139:
                  if (curChar == 46)
                     jjCheckNAdd(140);
                  break;
               case 140:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 148:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(48, 49);
                  break;
               case 149:
                  if (curChar == 58)
                     jjCheckNAdd(150);
                  break;
               case 150:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(50, 52);
                  break;
               case 151:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 153:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(153, 155);
                  break;
               case 157:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(53, 54);
                  break;
               case 158:
                  if (curChar == 62)
                     jjCheckNAddStates(55, 58);
                  break;
               case 160:
                  if (curChar == 47)
                     jjCheckNAdd(161);
                  break;
               case 161:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(59, 63);
                  break;
               case 162:
                  if (curChar == 46)
                     jjCheckNAdd(163);
                  break;
               case 163:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(64, 68);
                  break;
               case 164:
                  if (curChar == 58)
                     jjCheckNAdd(165);
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(69, 71);
                  break;
               case 166:
                  if (curChar == 47)
                     jjCheckNAddStates(72, 74);
                  break;
               case 167:
                  if ((0xa3ff606800000000L & l) != 0L)
                     jjCheckNAddStates(72, 74);
                  break;
               case 170:
                  if (curChar == 47)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 171:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 178:
                  if ((0x3ff600000000000L & l) != 0L)
                     jjCheckNAddTwoStates(178, 179);
                  break;
               case 180:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 181:
                  if (curChar == 46)
                     jjCheckNAdd(182);
                  break;
               case 182:
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 190:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjAddStates(81, 82);
                  break;
               case 191:
                  if (curChar == 62)
                     jjCheckNAddTwoStates(192, 198);
                  break;
               case 192:
                  if ((0xabffffb3ffffdbffL & l) != 0L)
                     jjCheckNAddStates(83, 85);
                  break;
               case 193:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 194;
                  break;
               case 195:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(195, 197);
                  break;
               case 198:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 200:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(200, 197);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 65:
                  if (curChar == 91)
                     jjCheckNAdd(190);
                  if (curChar == 91)
                     jjCheckNAdd(157);
                  if (curChar == 91)
                     jjCheckNAdd(148);
                  if (curChar == 91)
                     jjCheckNAdd(115);
                  if (curChar == 91)
                     jjCheckNAdd(108);
                  break;
               case 202:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  else if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  break;
               case 0:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 91)
                     jjAddStates(86, 90);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  else if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 65;
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  else if (curChar == 104)
                     jjAddStates(91, 92);
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 53;
                  if (curChar == 70)
                     jjAddStates(93, 94);
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 36;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 28;
                  else if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 15:
                  if ((0x7fffffec7fffffeL & l) != 0L)
                  {
                     if (kind > 69)
                        kind = 69;
                     jjCheckNAdd(69);
                  }
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  else if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 201:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  else if (curChar == 64)
                     jjCheckNAdd(61);
                  break;
               case 2:
                  if (kind > 2)
                     kind = 2;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 5:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 39)
                     kind = 39;
                  jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 6:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 8:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(8, 9);
                  break;
               case 12:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(12, 9);
                  break;
               case 13:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 14:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 13;
                  break;
               case 16:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 19:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(19, 20);
                  break;
               case 23:
                  if ((0x7e0000007eL & l) != 0L)
                     jjCheckNAddTwoStates(23, 20);
                  break;
               case 24:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 25:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 67)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 35:
                  if (curChar == 90)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 36:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(38, 39);
                  break;
               case 39:
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(39, 40);
                  break;
               case 40:
                  if ((0x7fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(40, 41);
                  break;
               case 41:
                  if ((0x7fffffe00000000L & l) == 0L)
                     break;
                  if (kind > 61)
                     kind = 61;
                  jjCheckNAddTwoStates(40, 41);
                  break;
               case 42:
                  if (curChar == 112)
                     jjCheckNAdd(52);
                  break;
               case 44:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(7, 10);
                  break;
               case 46:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddStates(11, 14);
                  break;
               case 50:
                  if ((0x47fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(49, 50);
                  break;
               case 53:
               case 77:
                  if (curChar == 116)
                     jjCheckNAdd(42);
                  break;
               case 54:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 115)
                     jjCheckNAdd(52);
                  break;
               case 56:
                  if (curChar == 119)
                     jjCheckNAdd(55);
                  break;
               case 57:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(59, 60);
                  break;
               case 60:
                  if (curChar == 64)
                     jjCheckNAdd(61);
                  break;
               case 61:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(61, 62);
                  break;
               case 63:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 62)
                     kind = 62;
                  jjCheckNAddTwoStates(62, 63);
                  break;
               case 64:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 66:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(67);
                  break;
               case 67:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(67, 68);
                  break;
               case 68:
                  if (curChar == 93 && kind > 63)
                     kind = 63;
                  break;
               case 69:
                  if ((0x7fffffec7fffffeL & l) == 0L)
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 71:
               case 72:
                  if ((0xc7ffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 75:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 71)
                     kind = 71;
                  jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 76:
                  if (curChar == 104)
                     jjAddStates(91, 92);
                  break;
               case 78:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 79:
                  if (curChar == 112)
                     jjCheckNAdd(55);
                  break;
               case 80:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 88:
                  if (curChar == 70)
                     jjAddStates(93, 94);
                  break;
               case 89:
                  if (curChar == 84)
                     jjAddStates(95, 96);
                  break;
               case 94:
                  if (curChar == 70)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 95:
                  if (curChar == 69)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 84)
                     jjAddStates(97, 98);
                  break;
               case 102:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 103:
                  if (curChar == 71)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 82)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 91)
                     jjAddStates(86, 90);
                  break;
               case 107:
                  if (curChar == 91)
                     jjCheckNAdd(108);
                  break;
               case 108:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 110:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(111);
                  break;
               case 111:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(111, 113);
                  break;
               case 112:
                  if (curChar == 93 && kind > 64)
                     kind = 64;
                  break;
               case 113:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 91)
                     jjCheckNAdd(115);
                  break;
               case 115:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(115, 116);
                  break;
               case 117:
                  if (curChar == 112)
                     jjCheckNAdd(129);
                  break;
               case 119:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(26, 30);
                  break;
               case 121:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(31, 35);
                  break;
               case 125:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(39, 41);
                  break;
               case 126:
                  if (curChar == 93 && kind > 65)
                     kind = 65;
                  break;
               case 127:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 130:
               case 142:
                  if (curChar == 116)
                     jjCheckNAdd(117);
                  break;
               case 131:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 115)
                     jjCheckNAdd(129);
                  break;
               case 133:
                  if (curChar == 119)
                     jjCheckNAdd(132);
                  break;
               case 134:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(99, 100);
                  break;
               case 137:
                  if (curChar == 64)
                     jjCheckNAdd(138);
                  break;
               case 138:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(42, 44);
                  break;
               case 140:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(45, 47);
                  break;
               case 141:
                  if (curChar == 104)
                     jjAddStates(101, 102);
                  break;
               case 143:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 112)
                     jjCheckNAdd(132);
                  break;
               case 145:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 91)
                     jjCheckNAdd(148);
                  break;
               case 148:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(148, 149);
                  break;
               case 150:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(50, 52);
                  break;
               case 152:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(153);
                  break;
               case 153:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(153, 155);
                  break;
               case 154:
                  if (curChar == 93 && kind > 66)
                     kind = 66;
                  break;
               case 155:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 91)
                     jjCheckNAdd(157);
                  break;
               case 157:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(157, 158);
                  break;
               case 159:
                  if (curChar == 112)
                     jjCheckNAdd(171);
                  break;
               case 161:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(59, 63);
                  break;
               case 163:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(64, 68);
                  break;
               case 167:
                  if ((0x47fffffe87fffffeL & l) != 0L)
                     jjCheckNAddStates(72, 74);
                  break;
               case 168:
                  if (curChar == 93 && kind > 67)
                     kind = 67;
                  break;
               case 169:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 172:
               case 184:
                  if (curChar == 116)
                     jjCheckNAdd(159);
                  break;
               case 173:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 115)
                     jjCheckNAdd(171);
                  break;
               case 175:
                  if (curChar == 119)
                     jjCheckNAdd(174);
                  break;
               case 176:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjAddStates(103, 104);
                  break;
               case 179:
                  if (curChar == 64)
                     jjCheckNAdd(180);
                  break;
               case 180:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(75, 77);
                  break;
               case 182:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(78, 80);
                  break;
               case 183:
                  if (curChar == 104)
                     jjAddStates(105, 106);
                  break;
               case 185:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 112)
                     jjCheckNAdd(174);
                  break;
               case 187:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 91)
                     jjCheckNAdd(190);
                  break;
               case 190:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddTwoStates(190, 191);
                  break;
               case 192:
                  if ((0xffffffffd7ffffffL & l) != 0L)
                     jjCheckNAddStates(83, 85);
                  break;
               case 194:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(195);
                  break;
               case 195:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(195, 197);
                  break;
               case 196:
                  if (curChar == 93 && kind > 68)
                     kind = 68;
                  break;
               case 197:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 196;
                  break;
               case 199:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAdd(200);
                  break;
               case 200:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(200, 197);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int hiByte = (int)(curChar >> 8);
         int i1 = hiByte >> 6;
         long l1 = 1L << (hiByte & 077);
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         MatchLoop: do
         {
            switch(jjstateSet[--i])
            {
               case 202:
               case 69:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 0:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 15:
                  if (!jjCanMove_1(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 69)
                     kind = 69;
                  jjCheckNAdd(69);
                  break;
               case 2:
                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 71:
               case 72:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjCheckNAddTwoStates(72, 73);
                  break;
               case 108:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(17, 19);
                  break;
               case 115:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(20, 21);
                  break;
               case 148:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(48, 49);
                  break;
               case 150:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(50, 52);
                  break;
               case 157:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(53, 54);
                  break;
               case 190:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(81, 82);
                  break;
               case 192:
                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))
                     jjAddStates(83, 85);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 201 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   83, 84, 87, 8, 11, 19, 22, 44, 45, 47, 49, 45, 46, 47, 49, 67, 
   68, 108, 109, 113, 115, 116, 131, 135, 136, 141, 119, 120, 122, 124, 127, 120, 
   121, 122, 124, 127, 123, 124, 127, 124, 125, 127, 138, 139, 127, 139, 140, 127, 
   148, 149, 150, 151, 155, 157, 158, 173, 177, 178, 183, 161, 162, 164, 166, 169, 
   162, 163, 164, 166, 169, 165, 166, 169, 166, 167, 169, 180, 181, 169, 181, 182, 
   169, 190, 191, 192, 193, 197, 107, 114, 147, 156, 189, 78, 81, 96, 105, 90, 
   93, 98, 101, 136, 137, 143, 146, 178, 179, 185, 188, 
};
private static final boolean jjCanMove_0(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 0:
         return ((jjbitVec2[i2] & l2) != 0L);
      default : 
         if ((jjbitVec0[i1] & l1) != 0L)
            return true;
         return false;
   }
}
private static final boolean jjCanMove_1(int hiByte, int i1, int i2, long l1, long l2)
{
   switch(hiByte)
   {
      case 215:
         return ((jjbitVec4[i2] & l2) != 0L);
      default : 
         if ((jjbitVec3[i1] & l1) != 0L)
            return true;
         return false;
   }
}
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\12", "\176", "\73", 
"\50", "\51", "\133", "\135", "\173", "\175", "\57", "\74", "\76", "\76\76", 
"\76\76\76", "\55", "\55\55", "\55\55\55", "\53", "\53\53", "\53\53\53", "\40", "\52", 
"\52\52", "\52\52\52", "\114\105\106\124\72", "\103\105\116\124\105\122\72", 
"\122\111\107\110\124\72", null, null, "\55\55\55\55", null, null, null, null, "\75\75", "\12\174", 
"\12\72", "\12\54", "\174", "\72", "\54", "\174", "\76\174", "\176\174", "\54", null, 
null, null, null, null, "\45\45", null, null, null, null, null, null, null, null, 
null, null, null, null, null, "\50\50", "\51\51", };
public static final String[] lexStateNames = {
   "CTAB", 
   "NTAB", 
   "DEFAULT", 
};
public static final int[] jjnewLexState = {
   -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, 0, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
};
static final long[] jjtoToken = {
   0xf83ffffffffffe01L, 0x7ffL, 
};
static final long[] jjtoSkip = {
   0x6L, 0x0L, 
};
protected JavaCharStream input_stream;
private final int[] jjrounds = new int[201];
private final int[] jjstateSet = new int[402];
StringBuffer image;
int jjimageLen;
int lengthOfMatch;
protected char curChar;
public WikiParserTokenManager(JavaCharStream stream)
{
   if (JavaCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}
public WikiParserTokenManager(JavaCharStream stream, int lexState)
{
   this(stream);
   SwitchTo(lexState);
}
public void ReInit(JavaCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private final void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 201; i-- > 0;)
      jjrounds[i] = 0x80000000;
}
public void ReInit(JavaCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}
public void SwitchTo(int lexState)
{
   if (lexState >= 3 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   Token t = Token.newToken(jjmatchedKind);
   t.kind = jjmatchedKind;
   String im = jjstrLiteralImages[jjmatchedKind];
   t.image = (im == null) ? input_stream.GetImage() : im;
   t.beginLine = input_stream.getBeginLine();
   t.beginColumn = input_stream.getBeginColumn();
   t.endLine = input_stream.getEndLine();
   t.endColumn = input_stream.getEndColumn();
   return t;
}

int curLexState = 2;
int defaultLexState = 2;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

public Token getNextToken() 
{
  int kind;
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {   
   try   
   {     
      curChar = input_stream.BeginToken();
   }     
   catch(java.io.IOException e)
   {        
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = null;
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       try { input_stream.backup(0);
          while (curChar <= 13 && (0x2000L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       if (jjmatchedPos == 0 && jjmatchedKind > 72)
       {
          jjmatchedKind = 72;
       }
       break;
     case 1:
       try { input_stream.backup(0);
          while (curChar <= 13 && (0x2000L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       if (jjmatchedPos == 0 && jjmatchedKind > 72)
       {
          jjmatchedKind = 72;
       }
       break;
     case 2:
       try { input_stream.backup(0);
          while (curChar <= 13 && (0x2000L & (1L << curChar)) != 0L)
             curChar = input_stream.BeginToken();
       }
       catch (java.io.IOException e1) { continue EOFLoop; }
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       if (jjmatchedPos == 0 && jjmatchedKind > 72)
       {
          jjmatchedKind = 72;
       }
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 72 :
        if (image == null)
            image = new StringBuffer(new String(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1))));
         else
            image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                ++nLexicalErrors_;
                tokenLog.info("unknown token " + image);
         break;
      default : 
         break;
   }
}
}
